
keypad-interface.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001378  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c0  0800153c  0800153c  0001153c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015fc  080015fc  00020088  2**0
                  CONTENTS
  4 .ARM          00000000  080015fc  080015fc  00020088  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015fc  080015fc  00020088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015fc  080015fc  000115fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001600  08001600  00011600  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000088  20000000  08001604  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000dc  20000088  0800168c  00020088  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000164  0800168c  00020164  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020088  2**0
                  CONTENTS, READONLY
 12 .debug_info   000002ef  00000000  00000000  000200b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000154  00000000  00000000  000203a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000068  00000000  00000000  000204f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000040  00000000  00000000  00020560  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002352  00000000  00000000  000205a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b26  00000000  00000000  000228f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008108  00000000  00000000  00023418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002b520  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000adc  00000000  00000000  0002b570  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000088 	.word	0x20000088
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08001524 	.word	0x08001524

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	2000008c 	.word	0x2000008c
 8000200:	08001524 	.word	0x08001524

08000204 <strlen>:
 8000204:	4603      	mov	r3, r0
 8000206:	f813 2b01 	ldrb.w	r2, [r3], #1
 800020a:	2a00      	cmp	r2, #0
 800020c:	d1fb      	bne.n	8000206 <strlen+0x2>
 800020e:	1a18      	subs	r0, r3, r0
 8000210:	3801      	subs	r0, #1
 8000212:	4770      	bx	lr

08000214 <main>:
uint32_t* gpiob_idr = (uint32_t*) (0x40020410);

extern void initialise_monitor_handles(void);

int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	af00      	add	r7, sp, #0
	initialise_monitor_handles();
 8000218:	f001 f908 	bl	800142c <initialise_monitor_handles>

	*rcc_ahb1enr |= (uint32_t) 0x3;
 800021c:	4b97      	ldr	r3, [pc, #604]	; (800047c <main+0x268>)
 800021e:	681b      	ldr	r3, [r3, #0]
 8000220:	681a      	ldr	r2, [r3, #0]
 8000222:	4b96      	ldr	r3, [pc, #600]	; (800047c <main+0x268>)
 8000224:	681b      	ldr	r3, [r3, #0]
 8000226:	f042 0203 	orr.w	r2, r2, #3
 800022a:	601a      	str	r2, [r3, #0]
	*gpioa_moder &= (uint32_t) 0xFFE0FFFF;
 800022c:	4b94      	ldr	r3, [pc, #592]	; (8000480 <main+0x26c>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	681a      	ldr	r2, [r3, #0]
 8000232:	4b93      	ldr	r3, [pc, #588]	; (8000480 <main+0x26c>)
 8000234:	681b      	ldr	r3, [r3, #0]
 8000236:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800023a:	601a      	str	r2, [r3, #0]
	*gpioa_moder |= (uint32_t) 0x10000;
 800023c:	4b90      	ldr	r3, [pc, #576]	; (8000480 <main+0x26c>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	681a      	ldr	r2, [r3, #0]
 8000242:	4b8f      	ldr	r3, [pc, #572]	; (8000480 <main+0x26c>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800024a:	601a      	str	r2, [r3, #0]
	*gpiob_moder &= (uint32_t) 0xFFCFC0FF;
 800024c:	4b8d      	ldr	r3, [pc, #564]	; (8000484 <main+0x270>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	4a8c      	ldr	r2, [pc, #560]	; (8000484 <main+0x270>)
 8000254:	6812      	ldr	r2, [r2, #0]
 8000256:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 800025a:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 800025e:	6013      	str	r3, [r2, #0]
	*gpiob_moder |= (uint32_t) 0x100500;
 8000260:	4b88      	ldr	r3, [pc, #544]	; (8000484 <main+0x270>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	681b      	ldr	r3, [r3, #0]
 8000266:	4a87      	ldr	r2, [pc, #540]	; (8000484 <main+0x270>)
 8000268:	6812      	ldr	r2, [r2, #0]
 800026a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800026e:	f443 63a0 	orr.w	r3, r3, #1280	; 0x500
 8000272:	6013      	str	r3, [r2, #0]

	*gpioa_odr &= (uint32_t) 0xFFFFFEFF;
 8000274:	4b84      	ldr	r3, [pc, #528]	; (8000488 <main+0x274>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	681a      	ldr	r2, [r3, #0]
 800027a:	4b83      	ldr	r3, [pc, #524]	; (8000488 <main+0x274>)
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8000282:	601a      	str	r2, [r3, #0]
	*gpioa_odr |= (uint32_t) 0x100;
 8000284:	4b80      	ldr	r3, [pc, #512]	; (8000488 <main+0x274>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	681a      	ldr	r2, [r3, #0]
 800028a:	4b7f      	ldr	r3, [pc, #508]	; (8000488 <main+0x274>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000292:	601a      	str	r2, [r3, #0]
	*gpiob_odr &= (uint32_t) 0xFFFFFBC0;
 8000294:	4b7d      	ldr	r3, [pc, #500]	; (800048c <main+0x278>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	681b      	ldr	r3, [r3, #0]
 800029a:	4a7c      	ldr	r2, [pc, #496]	; (800048c <main+0x278>)
 800029c:	6812      	ldr	r2, [r2, #0]
 800029e:	f423 6387 	bic.w	r3, r3, #1080	; 0x438
 80002a2:	f023 0307 	bic.w	r3, r3, #7
 80002a6:	6013      	str	r3, [r2, #0]
	*gpiob_odr |= (uint32_t) 0x430;
 80002a8:	4b78      	ldr	r3, [pc, #480]	; (800048c <main+0x278>)
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	681a      	ldr	r2, [r3, #0]
 80002ae:	4b77      	ldr	r3, [pc, #476]	; (800048c <main+0x278>)
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	f442 6286 	orr.w	r2, r2, #1072	; 0x430
 80002b6:	601a      	str	r2, [r3, #0]

    /* Loop forever */
	for(;;)
	{

		*gpioa_odr &= (uint32_t) 0xFFFFFEFF;
 80002b8:	4b73      	ldr	r3, [pc, #460]	; (8000488 <main+0x274>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	681a      	ldr	r2, [r3, #0]
 80002be:	4b72      	ldr	r3, [pc, #456]	; (8000488 <main+0x274>)
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80002c6:	601a      	str	r2, [r3, #0]

		if (((uint32_t) *gpiob_idr & (1<<3)) == 0)
 80002c8:	4b71      	ldr	r3, [pc, #452]	; (8000490 <main+0x27c>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	f003 0308 	and.w	r3, r3, #8
 80002d2:	2b00      	cmp	r3, #0
 80002d4:	d102      	bne.n	80002dc <main+0xc8>
		{
			printf("1\n");
 80002d6:	486f      	ldr	r0, [pc, #444]	; (8000494 <main+0x280>)
 80002d8:	f000 f9fe 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpioa_idr & (1<<10)) == 0)
 80002dc:	4b6e      	ldr	r3, [pc, #440]	; (8000498 <main+0x284>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80002e6:	2b00      	cmp	r3, #0
 80002e8:	d102      	bne.n	80002f0 <main+0xdc>
		{
			printf("2\n");
 80002ea:	486c      	ldr	r0, [pc, #432]	; (800049c <main+0x288>)
 80002ec:	f000 f9f4 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpiob_idr & (1<<6)) == 0)
 80002f0:	4b67      	ldr	r3, [pc, #412]	; (8000490 <main+0x27c>)
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	681b      	ldr	r3, [r3, #0]
 80002f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80002fa:	2b00      	cmp	r3, #0
 80002fc:	d102      	bne.n	8000304 <main+0xf0>
		{
			printf("3\n");
 80002fe:	4868      	ldr	r0, [pc, #416]	; (80004a0 <main+0x28c>)
 8000300:	f000 f9ea 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpioa_idr & (1<<9)) == 0)
 8000304:	4b64      	ldr	r3, [pc, #400]	; (8000498 <main+0x284>)
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800030e:	2b00      	cmp	r3, #0
 8000310:	d102      	bne.n	8000318 <main+0x104>
		{
			printf("A\n");
 8000312:	4864      	ldr	r0, [pc, #400]	; (80004a4 <main+0x290>)
 8000314:	f000 f9e0 	bl	80006d8 <puts>
		}

		*gpioa_odr |= (uint32_t) 0x100;
 8000318:	4b5b      	ldr	r3, [pc, #364]	; (8000488 <main+0x274>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	681a      	ldr	r2, [r3, #0]
 800031e:	4b5a      	ldr	r3, [pc, #360]	; (8000488 <main+0x274>)
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000326:	601a      	str	r2, [r3, #0]




		*gpiob_odr &= (uint32_t) 0xFFFFFBFF;
 8000328:	4b58      	ldr	r3, [pc, #352]	; (800048c <main+0x278>)
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	4b57      	ldr	r3, [pc, #348]	; (800048c <main+0x278>)
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8000336:	601a      	str	r2, [r3, #0]

		if (((uint32_t) *gpiob_idr & (1<<3)) == 0)
 8000338:	4b55      	ldr	r3, [pc, #340]	; (8000490 <main+0x27c>)
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	f003 0308 	and.w	r3, r3, #8
 8000342:	2b00      	cmp	r3, #0
 8000344:	d102      	bne.n	800034c <main+0x138>
		{
			printf("4\n");
 8000346:	4858      	ldr	r0, [pc, #352]	; (80004a8 <main+0x294>)
 8000348:	f000 f9c6 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpioa_idr & (1<<10)) == 0)
 800034c:	4b52      	ldr	r3, [pc, #328]	; (8000498 <main+0x284>)
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8000356:	2b00      	cmp	r3, #0
 8000358:	d102      	bne.n	8000360 <main+0x14c>
		{
			printf("5\n");
 800035a:	4854      	ldr	r0, [pc, #336]	; (80004ac <main+0x298>)
 800035c:	f000 f9bc 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpiob_idr & (1<<6)) == 0)
 8000360:	4b4b      	ldr	r3, [pc, #300]	; (8000490 <main+0x27c>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	681b      	ldr	r3, [r3, #0]
 8000366:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800036a:	2b00      	cmp	r3, #0
 800036c:	d102      	bne.n	8000374 <main+0x160>
		{
			printf("6\n");
 800036e:	4850      	ldr	r0, [pc, #320]	; (80004b0 <main+0x29c>)
 8000370:	f000 f9b2 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpioa_idr & (1<<9)) == 0)
 8000374:	4b48      	ldr	r3, [pc, #288]	; (8000498 <main+0x284>)
 8000376:	681b      	ldr	r3, [r3, #0]
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800037e:	2b00      	cmp	r3, #0
 8000380:	d102      	bne.n	8000388 <main+0x174>
		{
			printf("B\n");
 8000382:	484c      	ldr	r0, [pc, #304]	; (80004b4 <main+0x2a0>)
 8000384:	f000 f9a8 	bl	80006d8 <puts>
		}

		*gpiob_odr |= (uint32_t) 0x400;
 8000388:	4b40      	ldr	r3, [pc, #256]	; (800048c <main+0x278>)
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	681a      	ldr	r2, [r3, #0]
 800038e:	4b3f      	ldr	r3, [pc, #252]	; (800048c <main+0x278>)
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000396:	601a      	str	r2, [r3, #0]



		*gpiob_odr &= (uint32_t) 0xFFFFFFEF;
 8000398:	4b3c      	ldr	r3, [pc, #240]	; (800048c <main+0x278>)
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	681a      	ldr	r2, [r3, #0]
 800039e:	4b3b      	ldr	r3, [pc, #236]	; (800048c <main+0x278>)
 80003a0:	681b      	ldr	r3, [r3, #0]
 80003a2:	f022 0210 	bic.w	r2, r2, #16
 80003a6:	601a      	str	r2, [r3, #0]

		if (((uint32_t) *gpiob_idr & (1<<3)) == 0)
 80003a8:	4b39      	ldr	r3, [pc, #228]	; (8000490 <main+0x27c>)
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	f003 0308 	and.w	r3, r3, #8
 80003b2:	2b00      	cmp	r3, #0
 80003b4:	d102      	bne.n	80003bc <main+0x1a8>
		{
			printf("7\n");
 80003b6:	4840      	ldr	r0, [pc, #256]	; (80004b8 <main+0x2a4>)
 80003b8:	f000 f98e 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpioa_idr & (1<<10)) == 0)
 80003bc:	4b36      	ldr	r3, [pc, #216]	; (8000498 <main+0x284>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80003c6:	2b00      	cmp	r3, #0
 80003c8:	d102      	bne.n	80003d0 <main+0x1bc>
		{
			printf("8\n");
 80003ca:	483c      	ldr	r0, [pc, #240]	; (80004bc <main+0x2a8>)
 80003cc:	f000 f984 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpiob_idr & (1<<6)) == 0)
 80003d0:	4b2f      	ldr	r3, [pc, #188]	; (8000490 <main+0x27c>)
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80003da:	2b00      	cmp	r3, #0
 80003dc:	d102      	bne.n	80003e4 <main+0x1d0>
		{
			printf("9\n");
 80003de:	4838      	ldr	r0, [pc, #224]	; (80004c0 <main+0x2ac>)
 80003e0:	f000 f97a 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpioa_idr & (1<<9)) == 0)
 80003e4:	4b2c      	ldr	r3, [pc, #176]	; (8000498 <main+0x284>)
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80003ee:	2b00      	cmp	r3, #0
 80003f0:	d102      	bne.n	80003f8 <main+0x1e4>
		{
			printf("C\n");
 80003f2:	4834      	ldr	r0, [pc, #208]	; (80004c4 <main+0x2b0>)
 80003f4:	f000 f970 	bl	80006d8 <puts>
		}

		*gpiob_odr |= (uint32_t) 0x10;
 80003f8:	4b24      	ldr	r3, [pc, #144]	; (800048c <main+0x278>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	681a      	ldr	r2, [r3, #0]
 80003fe:	4b23      	ldr	r3, [pc, #140]	; (800048c <main+0x278>)
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	f042 0210 	orr.w	r2, r2, #16
 8000406:	601a      	str	r2, [r3, #0]




		*gpiob_odr &= (uint32_t) 0xFFFFFFDF;
 8000408:	4b20      	ldr	r3, [pc, #128]	; (800048c <main+0x278>)
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	681a      	ldr	r2, [r3, #0]
 800040e:	4b1f      	ldr	r3, [pc, #124]	; (800048c <main+0x278>)
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	f022 0220 	bic.w	r2, r2, #32
 8000416:	601a      	str	r2, [r3, #0]

		if (((uint32_t) *gpiob_idr & (1<<3)) == 0)
 8000418:	4b1d      	ldr	r3, [pc, #116]	; (8000490 <main+0x27c>)
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	f003 0308 	and.w	r3, r3, #8
 8000422:	2b00      	cmp	r3, #0
 8000424:	d102      	bne.n	800042c <main+0x218>
		{
			printf("*\n");
 8000426:	4828      	ldr	r0, [pc, #160]	; (80004c8 <main+0x2b4>)
 8000428:	f000 f956 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpioa_idr & (1<<10)) == 0)
 800042c:	4b1a      	ldr	r3, [pc, #104]	; (8000498 <main+0x284>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8000436:	2b00      	cmp	r3, #0
 8000438:	d102      	bne.n	8000440 <main+0x22c>
		{
			printf("0\n");
 800043a:	4824      	ldr	r0, [pc, #144]	; (80004cc <main+0x2b8>)
 800043c:	f000 f94c 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpiob_idr & (1<<6)) == 0)
 8000440:	4b13      	ldr	r3, [pc, #76]	; (8000490 <main+0x27c>)
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800044a:	2b00      	cmp	r3, #0
 800044c:	d102      	bne.n	8000454 <main+0x240>
		{
			printf("#\n");
 800044e:	4820      	ldr	r0, [pc, #128]	; (80004d0 <main+0x2bc>)
 8000450:	f000 f942 	bl	80006d8 <puts>
		}

		if (((uint32_t) *gpioa_idr & (1<<9)) == 0)
 8000454:	4b10      	ldr	r3, [pc, #64]	; (8000498 <main+0x284>)
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	681b      	ldr	r3, [r3, #0]
 800045a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800045e:	2b00      	cmp	r3, #0
 8000460:	d102      	bne.n	8000468 <main+0x254>
		{
			printf("D\n");
 8000462:	481c      	ldr	r0, [pc, #112]	; (80004d4 <main+0x2c0>)
 8000464:	f000 f938 	bl	80006d8 <puts>
		}

		*gpiob_odr |= (uint32_t) 0x20;
 8000468:	4b08      	ldr	r3, [pc, #32]	; (800048c <main+0x278>)
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	681a      	ldr	r2, [r3, #0]
 800046e:	4b07      	ldr	r3, [pc, #28]	; (800048c <main+0x278>)
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	f042 0220 	orr.w	r2, r2, #32
 8000476:	601a      	str	r2, [r3, #0]
		*gpioa_odr &= (uint32_t) 0xFFFFFEFF;
 8000478:	e71e      	b.n	80002b8 <main+0xa4>
 800047a:	bf00      	nop
 800047c:	20000000 	.word	0x20000000
 8000480:	20000004 	.word	0x20000004
 8000484:	20000008 	.word	0x20000008
 8000488:	2000000c 	.word	0x2000000c
 800048c:	20000014 	.word	0x20000014
 8000490:	20000018 	.word	0x20000018
 8000494:	0800153c 	.word	0x0800153c
 8000498:	20000010 	.word	0x20000010
 800049c:	08001540 	.word	0x08001540
 80004a0:	08001544 	.word	0x08001544
 80004a4:	08001548 	.word	0x08001548
 80004a8:	0800154c 	.word	0x0800154c
 80004ac:	08001550 	.word	0x08001550
 80004b0:	08001554 	.word	0x08001554
 80004b4:	08001558 	.word	0x08001558
 80004b8:	0800155c 	.word	0x0800155c
 80004bc:	08001560 	.word	0x08001560
 80004c0:	08001564 	.word	0x08001564
 80004c4:	08001568 	.word	0x08001568
 80004c8:	0800156c 	.word	0x0800156c
 80004cc:	08001570 	.word	0x08001570
 80004d0:	08001574 	.word	0x08001574
 80004d4:	08001578 	.word	0x08001578

080004d8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004d8:	b580      	push	{r7, lr}
 80004da:	b086      	sub	sp, #24
 80004dc:	af00      	add	r7, sp, #0
 80004de:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004e0:	4a14      	ldr	r2, [pc, #80]	; (8000534 <_sbrk+0x5c>)
 80004e2:	4b15      	ldr	r3, [pc, #84]	; (8000538 <_sbrk+0x60>)
 80004e4:	1ad3      	subs	r3, r2, r3
 80004e6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004e8:	697b      	ldr	r3, [r7, #20]
 80004ea:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004ec:	4b13      	ldr	r3, [pc, #76]	; (800053c <_sbrk+0x64>)
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	2b00      	cmp	r3, #0
 80004f2:	d102      	bne.n	80004fa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004f4:	4b11      	ldr	r3, [pc, #68]	; (800053c <_sbrk+0x64>)
 80004f6:	4a12      	ldr	r2, [pc, #72]	; (8000540 <_sbrk+0x68>)
 80004f8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004fa:	4b10      	ldr	r3, [pc, #64]	; (800053c <_sbrk+0x64>)
 80004fc:	681a      	ldr	r2, [r3, #0]
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	4413      	add	r3, r2
 8000502:	693a      	ldr	r2, [r7, #16]
 8000504:	429a      	cmp	r2, r3
 8000506:	d207      	bcs.n	8000518 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000508:	f000 f846 	bl	8000598 <__errno>
 800050c:	4603      	mov	r3, r0
 800050e:	220c      	movs	r2, #12
 8000510:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000512:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000516:	e009      	b.n	800052c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000518:	4b08      	ldr	r3, [pc, #32]	; (800053c <_sbrk+0x64>)
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800051e:	4b07      	ldr	r3, [pc, #28]	; (800053c <_sbrk+0x64>)
 8000520:	681a      	ldr	r2, [r3, #0]
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	4413      	add	r3, r2
 8000526:	4a05      	ldr	r2, [pc, #20]	; (800053c <_sbrk+0x64>)
 8000528:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800052a:	68fb      	ldr	r3, [r7, #12]
}
 800052c:	4618      	mov	r0, r3
 800052e:	3718      	adds	r7, #24
 8000530:	46bd      	mov	sp, r7
 8000532:	bd80      	pop	{r7, pc}
 8000534:	20020000 	.word	0x20020000
 8000538:	00000400 	.word	0x00000400
 800053c:	200000a4 	.word	0x200000a4
 8000540:	20000168 	.word	0x20000168

08000544 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000544:	480d      	ldr	r0, [pc, #52]	; (800057c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000546:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000548:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800054c:	480c      	ldr	r0, [pc, #48]	; (8000580 <LoopForever+0x6>)
  ldr r1, =_edata
 800054e:	490d      	ldr	r1, [pc, #52]	; (8000584 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000550:	4a0d      	ldr	r2, [pc, #52]	; (8000588 <LoopForever+0xe>)
  movs r3, #0
 8000552:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000554:	e002      	b.n	800055c <LoopCopyDataInit>

08000556 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000556:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000558:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800055a:	3304      	adds	r3, #4

0800055c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800055c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800055e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000560:	d3f9      	bcc.n	8000556 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000562:	4a0a      	ldr	r2, [pc, #40]	; (800058c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000564:	4c0a      	ldr	r4, [pc, #40]	; (8000590 <LoopForever+0x16>)
  movs r3, #0
 8000566:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000568:	e001      	b.n	800056e <LoopFillZerobss>

0800056a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800056a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800056c:	3204      	adds	r2, #4

0800056e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800056e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000570:	d3fb      	bcc.n	800056a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000572:	f000 f817 	bl	80005a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000576:	f7ff fe4d 	bl	8000214 <main>

0800057a <LoopForever>:

LoopForever:
  b LoopForever
 800057a:	e7fe      	b.n	800057a <LoopForever>
  ldr   r0, =_estack
 800057c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000580:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000584:	20000088 	.word	0x20000088
  ldr r2, =_sidata
 8000588:	08001604 	.word	0x08001604
  ldr r2, =_sbss
 800058c:	20000088 	.word	0x20000088
  ldr r4, =_ebss
 8000590:	20000164 	.word	0x20000164

08000594 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000594:	e7fe      	b.n	8000594 <ADC_IRQHandler>
	...

08000598 <__errno>:
 8000598:	4b01      	ldr	r3, [pc, #4]	; (80005a0 <__errno+0x8>)
 800059a:	6818      	ldr	r0, [r3, #0]
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop
 80005a0:	2000001c 	.word	0x2000001c

080005a4 <__libc_init_array>:
 80005a4:	b570      	push	{r4, r5, r6, lr}
 80005a6:	4d0d      	ldr	r5, [pc, #52]	; (80005dc <__libc_init_array+0x38>)
 80005a8:	4c0d      	ldr	r4, [pc, #52]	; (80005e0 <__libc_init_array+0x3c>)
 80005aa:	1b64      	subs	r4, r4, r5
 80005ac:	10a4      	asrs	r4, r4, #2
 80005ae:	2600      	movs	r6, #0
 80005b0:	42a6      	cmp	r6, r4
 80005b2:	d109      	bne.n	80005c8 <__libc_init_array+0x24>
 80005b4:	4d0b      	ldr	r5, [pc, #44]	; (80005e4 <__libc_init_array+0x40>)
 80005b6:	4c0c      	ldr	r4, [pc, #48]	; (80005e8 <__libc_init_array+0x44>)
 80005b8:	f000 ffb4 	bl	8001524 <_init>
 80005bc:	1b64      	subs	r4, r4, r5
 80005be:	10a4      	asrs	r4, r4, #2
 80005c0:	2600      	movs	r6, #0
 80005c2:	42a6      	cmp	r6, r4
 80005c4:	d105      	bne.n	80005d2 <__libc_init_array+0x2e>
 80005c6:	bd70      	pop	{r4, r5, r6, pc}
 80005c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80005cc:	4798      	blx	r3
 80005ce:	3601      	adds	r6, #1
 80005d0:	e7ee      	b.n	80005b0 <__libc_init_array+0xc>
 80005d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80005d6:	4798      	blx	r3
 80005d8:	3601      	adds	r6, #1
 80005da:	e7f2      	b.n	80005c2 <__libc_init_array+0x1e>
 80005dc:	080015fc 	.word	0x080015fc
 80005e0:	080015fc 	.word	0x080015fc
 80005e4:	080015fc 	.word	0x080015fc
 80005e8:	08001600 	.word	0x08001600

080005ec <memset>:
 80005ec:	4402      	add	r2, r0
 80005ee:	4603      	mov	r3, r0
 80005f0:	4293      	cmp	r3, r2
 80005f2:	d100      	bne.n	80005f6 <memset+0xa>
 80005f4:	4770      	bx	lr
 80005f6:	f803 1b01 	strb.w	r1, [r3], #1
 80005fa:	e7f9      	b.n	80005f0 <memset+0x4>

080005fc <_puts_r>:
 80005fc:	b570      	push	{r4, r5, r6, lr}
 80005fe:	460e      	mov	r6, r1
 8000600:	4605      	mov	r5, r0
 8000602:	b118      	cbz	r0, 800060c <_puts_r+0x10>
 8000604:	6983      	ldr	r3, [r0, #24]
 8000606:	b90b      	cbnz	r3, 800060c <_puts_r+0x10>
 8000608:	f000 fa44 	bl	8000a94 <__sinit>
 800060c:	69ab      	ldr	r3, [r5, #24]
 800060e:	68ac      	ldr	r4, [r5, #8]
 8000610:	b913      	cbnz	r3, 8000618 <_puts_r+0x1c>
 8000612:	4628      	mov	r0, r5
 8000614:	f000 fa3e 	bl	8000a94 <__sinit>
 8000618:	4b2c      	ldr	r3, [pc, #176]	; (80006cc <_puts_r+0xd0>)
 800061a:	429c      	cmp	r4, r3
 800061c:	d120      	bne.n	8000660 <_puts_r+0x64>
 800061e:	686c      	ldr	r4, [r5, #4]
 8000620:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000622:	07db      	lsls	r3, r3, #31
 8000624:	d405      	bmi.n	8000632 <_puts_r+0x36>
 8000626:	89a3      	ldrh	r3, [r4, #12]
 8000628:	0598      	lsls	r0, r3, #22
 800062a:	d402      	bmi.n	8000632 <_puts_r+0x36>
 800062c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800062e:	f000 facf 	bl	8000bd0 <__retarget_lock_acquire_recursive>
 8000632:	89a3      	ldrh	r3, [r4, #12]
 8000634:	0719      	lsls	r1, r3, #28
 8000636:	d51d      	bpl.n	8000674 <_puts_r+0x78>
 8000638:	6923      	ldr	r3, [r4, #16]
 800063a:	b1db      	cbz	r3, 8000674 <_puts_r+0x78>
 800063c:	3e01      	subs	r6, #1
 800063e:	68a3      	ldr	r3, [r4, #8]
 8000640:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000644:	3b01      	subs	r3, #1
 8000646:	60a3      	str	r3, [r4, #8]
 8000648:	bb39      	cbnz	r1, 800069a <_puts_r+0x9e>
 800064a:	2b00      	cmp	r3, #0
 800064c:	da38      	bge.n	80006c0 <_puts_r+0xc4>
 800064e:	4622      	mov	r2, r4
 8000650:	210a      	movs	r1, #10
 8000652:	4628      	mov	r0, r5
 8000654:	f000 f848 	bl	80006e8 <__swbuf_r>
 8000658:	3001      	adds	r0, #1
 800065a:	d011      	beq.n	8000680 <_puts_r+0x84>
 800065c:	250a      	movs	r5, #10
 800065e:	e011      	b.n	8000684 <_puts_r+0x88>
 8000660:	4b1b      	ldr	r3, [pc, #108]	; (80006d0 <_puts_r+0xd4>)
 8000662:	429c      	cmp	r4, r3
 8000664:	d101      	bne.n	800066a <_puts_r+0x6e>
 8000666:	68ac      	ldr	r4, [r5, #8]
 8000668:	e7da      	b.n	8000620 <_puts_r+0x24>
 800066a:	4b1a      	ldr	r3, [pc, #104]	; (80006d4 <_puts_r+0xd8>)
 800066c:	429c      	cmp	r4, r3
 800066e:	bf08      	it	eq
 8000670:	68ec      	ldreq	r4, [r5, #12]
 8000672:	e7d5      	b.n	8000620 <_puts_r+0x24>
 8000674:	4621      	mov	r1, r4
 8000676:	4628      	mov	r0, r5
 8000678:	f000 f888 	bl	800078c <__swsetup_r>
 800067c:	2800      	cmp	r0, #0
 800067e:	d0dd      	beq.n	800063c <_puts_r+0x40>
 8000680:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000684:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000686:	07da      	lsls	r2, r3, #31
 8000688:	d405      	bmi.n	8000696 <_puts_r+0x9a>
 800068a:	89a3      	ldrh	r3, [r4, #12]
 800068c:	059b      	lsls	r3, r3, #22
 800068e:	d402      	bmi.n	8000696 <_puts_r+0x9a>
 8000690:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000692:	f000 fa9e 	bl	8000bd2 <__retarget_lock_release_recursive>
 8000696:	4628      	mov	r0, r5
 8000698:	bd70      	pop	{r4, r5, r6, pc}
 800069a:	2b00      	cmp	r3, #0
 800069c:	da04      	bge.n	80006a8 <_puts_r+0xac>
 800069e:	69a2      	ldr	r2, [r4, #24]
 80006a0:	429a      	cmp	r2, r3
 80006a2:	dc06      	bgt.n	80006b2 <_puts_r+0xb6>
 80006a4:	290a      	cmp	r1, #10
 80006a6:	d004      	beq.n	80006b2 <_puts_r+0xb6>
 80006a8:	6823      	ldr	r3, [r4, #0]
 80006aa:	1c5a      	adds	r2, r3, #1
 80006ac:	6022      	str	r2, [r4, #0]
 80006ae:	7019      	strb	r1, [r3, #0]
 80006b0:	e7c5      	b.n	800063e <_puts_r+0x42>
 80006b2:	4622      	mov	r2, r4
 80006b4:	4628      	mov	r0, r5
 80006b6:	f000 f817 	bl	80006e8 <__swbuf_r>
 80006ba:	3001      	adds	r0, #1
 80006bc:	d1bf      	bne.n	800063e <_puts_r+0x42>
 80006be:	e7df      	b.n	8000680 <_puts_r+0x84>
 80006c0:	6823      	ldr	r3, [r4, #0]
 80006c2:	250a      	movs	r5, #10
 80006c4:	1c5a      	adds	r2, r3, #1
 80006c6:	6022      	str	r2, [r4, #0]
 80006c8:	701d      	strb	r5, [r3, #0]
 80006ca:	e7db      	b.n	8000684 <_puts_r+0x88>
 80006cc:	080015a0 	.word	0x080015a0
 80006d0:	080015c0 	.word	0x080015c0
 80006d4:	08001580 	.word	0x08001580

080006d8 <puts>:
 80006d8:	4b02      	ldr	r3, [pc, #8]	; (80006e4 <puts+0xc>)
 80006da:	4601      	mov	r1, r0
 80006dc:	6818      	ldr	r0, [r3, #0]
 80006de:	f7ff bf8d 	b.w	80005fc <_puts_r>
 80006e2:	bf00      	nop
 80006e4:	2000001c 	.word	0x2000001c

080006e8 <__swbuf_r>:
 80006e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ea:	460e      	mov	r6, r1
 80006ec:	4614      	mov	r4, r2
 80006ee:	4605      	mov	r5, r0
 80006f0:	b118      	cbz	r0, 80006fa <__swbuf_r+0x12>
 80006f2:	6983      	ldr	r3, [r0, #24]
 80006f4:	b90b      	cbnz	r3, 80006fa <__swbuf_r+0x12>
 80006f6:	f000 f9cd 	bl	8000a94 <__sinit>
 80006fa:	4b21      	ldr	r3, [pc, #132]	; (8000780 <__swbuf_r+0x98>)
 80006fc:	429c      	cmp	r4, r3
 80006fe:	d12b      	bne.n	8000758 <__swbuf_r+0x70>
 8000700:	686c      	ldr	r4, [r5, #4]
 8000702:	69a3      	ldr	r3, [r4, #24]
 8000704:	60a3      	str	r3, [r4, #8]
 8000706:	89a3      	ldrh	r3, [r4, #12]
 8000708:	071a      	lsls	r2, r3, #28
 800070a:	d52f      	bpl.n	800076c <__swbuf_r+0x84>
 800070c:	6923      	ldr	r3, [r4, #16]
 800070e:	b36b      	cbz	r3, 800076c <__swbuf_r+0x84>
 8000710:	6923      	ldr	r3, [r4, #16]
 8000712:	6820      	ldr	r0, [r4, #0]
 8000714:	1ac0      	subs	r0, r0, r3
 8000716:	6963      	ldr	r3, [r4, #20]
 8000718:	b2f6      	uxtb	r6, r6
 800071a:	4283      	cmp	r3, r0
 800071c:	4637      	mov	r7, r6
 800071e:	dc04      	bgt.n	800072a <__swbuf_r+0x42>
 8000720:	4621      	mov	r1, r4
 8000722:	4628      	mov	r0, r5
 8000724:	f000 f922 	bl	800096c <_fflush_r>
 8000728:	bb30      	cbnz	r0, 8000778 <__swbuf_r+0x90>
 800072a:	68a3      	ldr	r3, [r4, #8]
 800072c:	3b01      	subs	r3, #1
 800072e:	60a3      	str	r3, [r4, #8]
 8000730:	6823      	ldr	r3, [r4, #0]
 8000732:	1c5a      	adds	r2, r3, #1
 8000734:	6022      	str	r2, [r4, #0]
 8000736:	701e      	strb	r6, [r3, #0]
 8000738:	6963      	ldr	r3, [r4, #20]
 800073a:	3001      	adds	r0, #1
 800073c:	4283      	cmp	r3, r0
 800073e:	d004      	beq.n	800074a <__swbuf_r+0x62>
 8000740:	89a3      	ldrh	r3, [r4, #12]
 8000742:	07db      	lsls	r3, r3, #31
 8000744:	d506      	bpl.n	8000754 <__swbuf_r+0x6c>
 8000746:	2e0a      	cmp	r6, #10
 8000748:	d104      	bne.n	8000754 <__swbuf_r+0x6c>
 800074a:	4621      	mov	r1, r4
 800074c:	4628      	mov	r0, r5
 800074e:	f000 f90d 	bl	800096c <_fflush_r>
 8000752:	b988      	cbnz	r0, 8000778 <__swbuf_r+0x90>
 8000754:	4638      	mov	r0, r7
 8000756:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000758:	4b0a      	ldr	r3, [pc, #40]	; (8000784 <__swbuf_r+0x9c>)
 800075a:	429c      	cmp	r4, r3
 800075c:	d101      	bne.n	8000762 <__swbuf_r+0x7a>
 800075e:	68ac      	ldr	r4, [r5, #8]
 8000760:	e7cf      	b.n	8000702 <__swbuf_r+0x1a>
 8000762:	4b09      	ldr	r3, [pc, #36]	; (8000788 <__swbuf_r+0xa0>)
 8000764:	429c      	cmp	r4, r3
 8000766:	bf08      	it	eq
 8000768:	68ec      	ldreq	r4, [r5, #12]
 800076a:	e7ca      	b.n	8000702 <__swbuf_r+0x1a>
 800076c:	4621      	mov	r1, r4
 800076e:	4628      	mov	r0, r5
 8000770:	f000 f80c 	bl	800078c <__swsetup_r>
 8000774:	2800      	cmp	r0, #0
 8000776:	d0cb      	beq.n	8000710 <__swbuf_r+0x28>
 8000778:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800077c:	e7ea      	b.n	8000754 <__swbuf_r+0x6c>
 800077e:	bf00      	nop
 8000780:	080015a0 	.word	0x080015a0
 8000784:	080015c0 	.word	0x080015c0
 8000788:	08001580 	.word	0x08001580

0800078c <__swsetup_r>:
 800078c:	4b32      	ldr	r3, [pc, #200]	; (8000858 <__swsetup_r+0xcc>)
 800078e:	b570      	push	{r4, r5, r6, lr}
 8000790:	681d      	ldr	r5, [r3, #0]
 8000792:	4606      	mov	r6, r0
 8000794:	460c      	mov	r4, r1
 8000796:	b125      	cbz	r5, 80007a2 <__swsetup_r+0x16>
 8000798:	69ab      	ldr	r3, [r5, #24]
 800079a:	b913      	cbnz	r3, 80007a2 <__swsetup_r+0x16>
 800079c:	4628      	mov	r0, r5
 800079e:	f000 f979 	bl	8000a94 <__sinit>
 80007a2:	4b2e      	ldr	r3, [pc, #184]	; (800085c <__swsetup_r+0xd0>)
 80007a4:	429c      	cmp	r4, r3
 80007a6:	d10f      	bne.n	80007c8 <__swsetup_r+0x3c>
 80007a8:	686c      	ldr	r4, [r5, #4]
 80007aa:	89a3      	ldrh	r3, [r4, #12]
 80007ac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80007b0:	0719      	lsls	r1, r3, #28
 80007b2:	d42c      	bmi.n	800080e <__swsetup_r+0x82>
 80007b4:	06dd      	lsls	r5, r3, #27
 80007b6:	d411      	bmi.n	80007dc <__swsetup_r+0x50>
 80007b8:	2309      	movs	r3, #9
 80007ba:	6033      	str	r3, [r6, #0]
 80007bc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80007c0:	81a3      	strh	r3, [r4, #12]
 80007c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80007c6:	e03e      	b.n	8000846 <__swsetup_r+0xba>
 80007c8:	4b25      	ldr	r3, [pc, #148]	; (8000860 <__swsetup_r+0xd4>)
 80007ca:	429c      	cmp	r4, r3
 80007cc:	d101      	bne.n	80007d2 <__swsetup_r+0x46>
 80007ce:	68ac      	ldr	r4, [r5, #8]
 80007d0:	e7eb      	b.n	80007aa <__swsetup_r+0x1e>
 80007d2:	4b24      	ldr	r3, [pc, #144]	; (8000864 <__swsetup_r+0xd8>)
 80007d4:	429c      	cmp	r4, r3
 80007d6:	bf08      	it	eq
 80007d8:	68ec      	ldreq	r4, [r5, #12]
 80007da:	e7e6      	b.n	80007aa <__swsetup_r+0x1e>
 80007dc:	0758      	lsls	r0, r3, #29
 80007de:	d512      	bpl.n	8000806 <__swsetup_r+0x7a>
 80007e0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007e2:	b141      	cbz	r1, 80007f6 <__swsetup_r+0x6a>
 80007e4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007e8:	4299      	cmp	r1, r3
 80007ea:	d002      	beq.n	80007f2 <__swsetup_r+0x66>
 80007ec:	4630      	mov	r0, r6
 80007ee:	f000 fa57 	bl	8000ca0 <_free_r>
 80007f2:	2300      	movs	r3, #0
 80007f4:	6363      	str	r3, [r4, #52]	; 0x34
 80007f6:	89a3      	ldrh	r3, [r4, #12]
 80007f8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80007fc:	81a3      	strh	r3, [r4, #12]
 80007fe:	2300      	movs	r3, #0
 8000800:	6063      	str	r3, [r4, #4]
 8000802:	6923      	ldr	r3, [r4, #16]
 8000804:	6023      	str	r3, [r4, #0]
 8000806:	89a3      	ldrh	r3, [r4, #12]
 8000808:	f043 0308 	orr.w	r3, r3, #8
 800080c:	81a3      	strh	r3, [r4, #12]
 800080e:	6923      	ldr	r3, [r4, #16]
 8000810:	b94b      	cbnz	r3, 8000826 <__swsetup_r+0x9a>
 8000812:	89a3      	ldrh	r3, [r4, #12]
 8000814:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000818:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800081c:	d003      	beq.n	8000826 <__swsetup_r+0x9a>
 800081e:	4621      	mov	r1, r4
 8000820:	4630      	mov	r0, r6
 8000822:	f000 f9fd 	bl	8000c20 <__smakebuf_r>
 8000826:	89a0      	ldrh	r0, [r4, #12]
 8000828:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800082c:	f010 0301 	ands.w	r3, r0, #1
 8000830:	d00a      	beq.n	8000848 <__swsetup_r+0xbc>
 8000832:	2300      	movs	r3, #0
 8000834:	60a3      	str	r3, [r4, #8]
 8000836:	6963      	ldr	r3, [r4, #20]
 8000838:	425b      	negs	r3, r3
 800083a:	61a3      	str	r3, [r4, #24]
 800083c:	6923      	ldr	r3, [r4, #16]
 800083e:	b943      	cbnz	r3, 8000852 <__swsetup_r+0xc6>
 8000840:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000844:	d1ba      	bne.n	80007bc <__swsetup_r+0x30>
 8000846:	bd70      	pop	{r4, r5, r6, pc}
 8000848:	0781      	lsls	r1, r0, #30
 800084a:	bf58      	it	pl
 800084c:	6963      	ldrpl	r3, [r4, #20]
 800084e:	60a3      	str	r3, [r4, #8]
 8000850:	e7f4      	b.n	800083c <__swsetup_r+0xb0>
 8000852:	2000      	movs	r0, #0
 8000854:	e7f7      	b.n	8000846 <__swsetup_r+0xba>
 8000856:	bf00      	nop
 8000858:	2000001c 	.word	0x2000001c
 800085c:	080015a0 	.word	0x080015a0
 8000860:	080015c0 	.word	0x080015c0
 8000864:	08001580 	.word	0x08001580

08000868 <__sflush_r>:
 8000868:	898a      	ldrh	r2, [r1, #12]
 800086a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800086c:	4605      	mov	r5, r0
 800086e:	0710      	lsls	r0, r2, #28
 8000870:	460c      	mov	r4, r1
 8000872:	d457      	bmi.n	8000924 <__sflush_r+0xbc>
 8000874:	684b      	ldr	r3, [r1, #4]
 8000876:	2b00      	cmp	r3, #0
 8000878:	dc04      	bgt.n	8000884 <__sflush_r+0x1c>
 800087a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800087c:	2b00      	cmp	r3, #0
 800087e:	dc01      	bgt.n	8000884 <__sflush_r+0x1c>
 8000880:	2000      	movs	r0, #0
 8000882:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000884:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000886:	2e00      	cmp	r6, #0
 8000888:	d0fa      	beq.n	8000880 <__sflush_r+0x18>
 800088a:	2300      	movs	r3, #0
 800088c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000890:	682f      	ldr	r7, [r5, #0]
 8000892:	602b      	str	r3, [r5, #0]
 8000894:	d032      	beq.n	80008fc <__sflush_r+0x94>
 8000896:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000898:	89a3      	ldrh	r3, [r4, #12]
 800089a:	075a      	lsls	r2, r3, #29
 800089c:	d505      	bpl.n	80008aa <__sflush_r+0x42>
 800089e:	6863      	ldr	r3, [r4, #4]
 80008a0:	1ac0      	subs	r0, r0, r3
 80008a2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008a4:	b10b      	cbz	r3, 80008aa <__sflush_r+0x42>
 80008a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008a8:	1ac0      	subs	r0, r0, r3
 80008aa:	2300      	movs	r3, #0
 80008ac:	4602      	mov	r2, r0
 80008ae:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008b0:	6a21      	ldr	r1, [r4, #32]
 80008b2:	4628      	mov	r0, r5
 80008b4:	47b0      	blx	r6
 80008b6:	1c43      	adds	r3, r0, #1
 80008b8:	89a3      	ldrh	r3, [r4, #12]
 80008ba:	d106      	bne.n	80008ca <__sflush_r+0x62>
 80008bc:	6829      	ldr	r1, [r5, #0]
 80008be:	291d      	cmp	r1, #29
 80008c0:	d82c      	bhi.n	800091c <__sflush_r+0xb4>
 80008c2:	4a29      	ldr	r2, [pc, #164]	; (8000968 <__sflush_r+0x100>)
 80008c4:	40ca      	lsrs	r2, r1
 80008c6:	07d6      	lsls	r6, r2, #31
 80008c8:	d528      	bpl.n	800091c <__sflush_r+0xb4>
 80008ca:	2200      	movs	r2, #0
 80008cc:	6062      	str	r2, [r4, #4]
 80008ce:	04d9      	lsls	r1, r3, #19
 80008d0:	6922      	ldr	r2, [r4, #16]
 80008d2:	6022      	str	r2, [r4, #0]
 80008d4:	d504      	bpl.n	80008e0 <__sflush_r+0x78>
 80008d6:	1c42      	adds	r2, r0, #1
 80008d8:	d101      	bne.n	80008de <__sflush_r+0x76>
 80008da:	682b      	ldr	r3, [r5, #0]
 80008dc:	b903      	cbnz	r3, 80008e0 <__sflush_r+0x78>
 80008de:	6560      	str	r0, [r4, #84]	; 0x54
 80008e0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80008e2:	602f      	str	r7, [r5, #0]
 80008e4:	2900      	cmp	r1, #0
 80008e6:	d0cb      	beq.n	8000880 <__sflush_r+0x18>
 80008e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80008ec:	4299      	cmp	r1, r3
 80008ee:	d002      	beq.n	80008f6 <__sflush_r+0x8e>
 80008f0:	4628      	mov	r0, r5
 80008f2:	f000 f9d5 	bl	8000ca0 <_free_r>
 80008f6:	2000      	movs	r0, #0
 80008f8:	6360      	str	r0, [r4, #52]	; 0x34
 80008fa:	e7c2      	b.n	8000882 <__sflush_r+0x1a>
 80008fc:	6a21      	ldr	r1, [r4, #32]
 80008fe:	2301      	movs	r3, #1
 8000900:	4628      	mov	r0, r5
 8000902:	47b0      	blx	r6
 8000904:	1c41      	adds	r1, r0, #1
 8000906:	d1c7      	bne.n	8000898 <__sflush_r+0x30>
 8000908:	682b      	ldr	r3, [r5, #0]
 800090a:	2b00      	cmp	r3, #0
 800090c:	d0c4      	beq.n	8000898 <__sflush_r+0x30>
 800090e:	2b1d      	cmp	r3, #29
 8000910:	d001      	beq.n	8000916 <__sflush_r+0xae>
 8000912:	2b16      	cmp	r3, #22
 8000914:	d101      	bne.n	800091a <__sflush_r+0xb2>
 8000916:	602f      	str	r7, [r5, #0]
 8000918:	e7b2      	b.n	8000880 <__sflush_r+0x18>
 800091a:	89a3      	ldrh	r3, [r4, #12]
 800091c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000920:	81a3      	strh	r3, [r4, #12]
 8000922:	e7ae      	b.n	8000882 <__sflush_r+0x1a>
 8000924:	690f      	ldr	r7, [r1, #16]
 8000926:	2f00      	cmp	r7, #0
 8000928:	d0aa      	beq.n	8000880 <__sflush_r+0x18>
 800092a:	0793      	lsls	r3, r2, #30
 800092c:	680e      	ldr	r6, [r1, #0]
 800092e:	bf08      	it	eq
 8000930:	694b      	ldreq	r3, [r1, #20]
 8000932:	600f      	str	r7, [r1, #0]
 8000934:	bf18      	it	ne
 8000936:	2300      	movne	r3, #0
 8000938:	1bf6      	subs	r6, r6, r7
 800093a:	608b      	str	r3, [r1, #8]
 800093c:	2e00      	cmp	r6, #0
 800093e:	dd9f      	ble.n	8000880 <__sflush_r+0x18>
 8000940:	6a21      	ldr	r1, [r4, #32]
 8000942:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000946:	4633      	mov	r3, r6
 8000948:	463a      	mov	r2, r7
 800094a:	4628      	mov	r0, r5
 800094c:	47e0      	blx	ip
 800094e:	2800      	cmp	r0, #0
 8000950:	dc06      	bgt.n	8000960 <__sflush_r+0xf8>
 8000952:	89a3      	ldrh	r3, [r4, #12]
 8000954:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000958:	81a3      	strh	r3, [r4, #12]
 800095a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800095e:	e790      	b.n	8000882 <__sflush_r+0x1a>
 8000960:	4407      	add	r7, r0
 8000962:	1a36      	subs	r6, r6, r0
 8000964:	e7ea      	b.n	800093c <__sflush_r+0xd4>
 8000966:	bf00      	nop
 8000968:	20400001 	.word	0x20400001

0800096c <_fflush_r>:
 800096c:	b538      	push	{r3, r4, r5, lr}
 800096e:	690b      	ldr	r3, [r1, #16]
 8000970:	4605      	mov	r5, r0
 8000972:	460c      	mov	r4, r1
 8000974:	b913      	cbnz	r3, 800097c <_fflush_r+0x10>
 8000976:	2500      	movs	r5, #0
 8000978:	4628      	mov	r0, r5
 800097a:	bd38      	pop	{r3, r4, r5, pc}
 800097c:	b118      	cbz	r0, 8000986 <_fflush_r+0x1a>
 800097e:	6983      	ldr	r3, [r0, #24]
 8000980:	b90b      	cbnz	r3, 8000986 <_fflush_r+0x1a>
 8000982:	f000 f887 	bl	8000a94 <__sinit>
 8000986:	4b14      	ldr	r3, [pc, #80]	; (80009d8 <_fflush_r+0x6c>)
 8000988:	429c      	cmp	r4, r3
 800098a:	d11b      	bne.n	80009c4 <_fflush_r+0x58>
 800098c:	686c      	ldr	r4, [r5, #4]
 800098e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000992:	2b00      	cmp	r3, #0
 8000994:	d0ef      	beq.n	8000976 <_fflush_r+0xa>
 8000996:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000998:	07d0      	lsls	r0, r2, #31
 800099a:	d404      	bmi.n	80009a6 <_fflush_r+0x3a>
 800099c:	0599      	lsls	r1, r3, #22
 800099e:	d402      	bmi.n	80009a6 <_fflush_r+0x3a>
 80009a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009a2:	f000 f915 	bl	8000bd0 <__retarget_lock_acquire_recursive>
 80009a6:	4628      	mov	r0, r5
 80009a8:	4621      	mov	r1, r4
 80009aa:	f7ff ff5d 	bl	8000868 <__sflush_r>
 80009ae:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80009b0:	07da      	lsls	r2, r3, #31
 80009b2:	4605      	mov	r5, r0
 80009b4:	d4e0      	bmi.n	8000978 <_fflush_r+0xc>
 80009b6:	89a3      	ldrh	r3, [r4, #12]
 80009b8:	059b      	lsls	r3, r3, #22
 80009ba:	d4dd      	bmi.n	8000978 <_fflush_r+0xc>
 80009bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009be:	f000 f908 	bl	8000bd2 <__retarget_lock_release_recursive>
 80009c2:	e7d9      	b.n	8000978 <_fflush_r+0xc>
 80009c4:	4b05      	ldr	r3, [pc, #20]	; (80009dc <_fflush_r+0x70>)
 80009c6:	429c      	cmp	r4, r3
 80009c8:	d101      	bne.n	80009ce <_fflush_r+0x62>
 80009ca:	68ac      	ldr	r4, [r5, #8]
 80009cc:	e7df      	b.n	800098e <_fflush_r+0x22>
 80009ce:	4b04      	ldr	r3, [pc, #16]	; (80009e0 <_fflush_r+0x74>)
 80009d0:	429c      	cmp	r4, r3
 80009d2:	bf08      	it	eq
 80009d4:	68ec      	ldreq	r4, [r5, #12]
 80009d6:	e7da      	b.n	800098e <_fflush_r+0x22>
 80009d8:	080015a0 	.word	0x080015a0
 80009dc:	080015c0 	.word	0x080015c0
 80009e0:	08001580 	.word	0x08001580

080009e4 <std>:
 80009e4:	2300      	movs	r3, #0
 80009e6:	b510      	push	{r4, lr}
 80009e8:	4604      	mov	r4, r0
 80009ea:	e9c0 3300 	strd	r3, r3, [r0]
 80009ee:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80009f2:	6083      	str	r3, [r0, #8]
 80009f4:	8181      	strh	r1, [r0, #12]
 80009f6:	6643      	str	r3, [r0, #100]	; 0x64
 80009f8:	81c2      	strh	r2, [r0, #14]
 80009fa:	6183      	str	r3, [r0, #24]
 80009fc:	4619      	mov	r1, r3
 80009fe:	2208      	movs	r2, #8
 8000a00:	305c      	adds	r0, #92	; 0x5c
 8000a02:	f7ff fdf3 	bl	80005ec <memset>
 8000a06:	4b05      	ldr	r3, [pc, #20]	; (8000a1c <std+0x38>)
 8000a08:	6263      	str	r3, [r4, #36]	; 0x24
 8000a0a:	4b05      	ldr	r3, [pc, #20]	; (8000a20 <std+0x3c>)
 8000a0c:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a0e:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <std+0x40>)
 8000a10:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a12:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <std+0x44>)
 8000a14:	6224      	str	r4, [r4, #32]
 8000a16:	6323      	str	r3, [r4, #48]	; 0x30
 8000a18:	bd10      	pop	{r4, pc}
 8000a1a:	bf00      	nop
 8000a1c:	08000e7d 	.word	0x08000e7d
 8000a20:	08000e9f 	.word	0x08000e9f
 8000a24:	08000ed7 	.word	0x08000ed7
 8000a28:	08000efb 	.word	0x08000efb

08000a2c <_cleanup_r>:
 8000a2c:	4901      	ldr	r1, [pc, #4]	; (8000a34 <_cleanup_r+0x8>)
 8000a2e:	f000 b8af 	b.w	8000b90 <_fwalk_reent>
 8000a32:	bf00      	nop
 8000a34:	0800096d 	.word	0x0800096d

08000a38 <__sfmoreglue>:
 8000a38:	b570      	push	{r4, r5, r6, lr}
 8000a3a:	2268      	movs	r2, #104	; 0x68
 8000a3c:	1e4d      	subs	r5, r1, #1
 8000a3e:	4355      	muls	r5, r2
 8000a40:	460e      	mov	r6, r1
 8000a42:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a46:	f000 f995 	bl	8000d74 <_malloc_r>
 8000a4a:	4604      	mov	r4, r0
 8000a4c:	b140      	cbz	r0, 8000a60 <__sfmoreglue+0x28>
 8000a4e:	2100      	movs	r1, #0
 8000a50:	e9c0 1600 	strd	r1, r6, [r0]
 8000a54:	300c      	adds	r0, #12
 8000a56:	60a0      	str	r0, [r4, #8]
 8000a58:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a5c:	f7ff fdc6 	bl	80005ec <memset>
 8000a60:	4620      	mov	r0, r4
 8000a62:	bd70      	pop	{r4, r5, r6, pc}

08000a64 <__sfp_lock_acquire>:
 8000a64:	4801      	ldr	r0, [pc, #4]	; (8000a6c <__sfp_lock_acquire+0x8>)
 8000a66:	f000 b8b3 	b.w	8000bd0 <__retarget_lock_acquire_recursive>
 8000a6a:	bf00      	nop
 8000a6c:	200000a9 	.word	0x200000a9

08000a70 <__sfp_lock_release>:
 8000a70:	4801      	ldr	r0, [pc, #4]	; (8000a78 <__sfp_lock_release+0x8>)
 8000a72:	f000 b8ae 	b.w	8000bd2 <__retarget_lock_release_recursive>
 8000a76:	bf00      	nop
 8000a78:	200000a9 	.word	0x200000a9

08000a7c <__sinit_lock_acquire>:
 8000a7c:	4801      	ldr	r0, [pc, #4]	; (8000a84 <__sinit_lock_acquire+0x8>)
 8000a7e:	f000 b8a7 	b.w	8000bd0 <__retarget_lock_acquire_recursive>
 8000a82:	bf00      	nop
 8000a84:	200000aa 	.word	0x200000aa

08000a88 <__sinit_lock_release>:
 8000a88:	4801      	ldr	r0, [pc, #4]	; (8000a90 <__sinit_lock_release+0x8>)
 8000a8a:	f000 b8a2 	b.w	8000bd2 <__retarget_lock_release_recursive>
 8000a8e:	bf00      	nop
 8000a90:	200000aa 	.word	0x200000aa

08000a94 <__sinit>:
 8000a94:	b510      	push	{r4, lr}
 8000a96:	4604      	mov	r4, r0
 8000a98:	f7ff fff0 	bl	8000a7c <__sinit_lock_acquire>
 8000a9c:	69a3      	ldr	r3, [r4, #24]
 8000a9e:	b11b      	cbz	r3, 8000aa8 <__sinit+0x14>
 8000aa0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000aa4:	f7ff bff0 	b.w	8000a88 <__sinit_lock_release>
 8000aa8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000aac:	6523      	str	r3, [r4, #80]	; 0x50
 8000aae:	4b13      	ldr	r3, [pc, #76]	; (8000afc <__sinit+0x68>)
 8000ab0:	4a13      	ldr	r2, [pc, #76]	; (8000b00 <__sinit+0x6c>)
 8000ab2:	681b      	ldr	r3, [r3, #0]
 8000ab4:	62a2      	str	r2, [r4, #40]	; 0x28
 8000ab6:	42a3      	cmp	r3, r4
 8000ab8:	bf04      	itt	eq
 8000aba:	2301      	moveq	r3, #1
 8000abc:	61a3      	streq	r3, [r4, #24]
 8000abe:	4620      	mov	r0, r4
 8000ac0:	f000 f820 	bl	8000b04 <__sfp>
 8000ac4:	6060      	str	r0, [r4, #4]
 8000ac6:	4620      	mov	r0, r4
 8000ac8:	f000 f81c 	bl	8000b04 <__sfp>
 8000acc:	60a0      	str	r0, [r4, #8]
 8000ace:	4620      	mov	r0, r4
 8000ad0:	f000 f818 	bl	8000b04 <__sfp>
 8000ad4:	2200      	movs	r2, #0
 8000ad6:	60e0      	str	r0, [r4, #12]
 8000ad8:	2104      	movs	r1, #4
 8000ada:	6860      	ldr	r0, [r4, #4]
 8000adc:	f7ff ff82 	bl	80009e4 <std>
 8000ae0:	68a0      	ldr	r0, [r4, #8]
 8000ae2:	2201      	movs	r2, #1
 8000ae4:	2109      	movs	r1, #9
 8000ae6:	f7ff ff7d 	bl	80009e4 <std>
 8000aea:	68e0      	ldr	r0, [r4, #12]
 8000aec:	2202      	movs	r2, #2
 8000aee:	2112      	movs	r1, #18
 8000af0:	f7ff ff78 	bl	80009e4 <std>
 8000af4:	2301      	movs	r3, #1
 8000af6:	61a3      	str	r3, [r4, #24]
 8000af8:	e7d2      	b.n	8000aa0 <__sinit+0xc>
 8000afa:	bf00      	nop
 8000afc:	0800157c 	.word	0x0800157c
 8000b00:	08000a2d 	.word	0x08000a2d

08000b04 <__sfp>:
 8000b04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b06:	4607      	mov	r7, r0
 8000b08:	f7ff ffac 	bl	8000a64 <__sfp_lock_acquire>
 8000b0c:	4b1e      	ldr	r3, [pc, #120]	; (8000b88 <__sfp+0x84>)
 8000b0e:	681e      	ldr	r6, [r3, #0]
 8000b10:	69b3      	ldr	r3, [r6, #24]
 8000b12:	b913      	cbnz	r3, 8000b1a <__sfp+0x16>
 8000b14:	4630      	mov	r0, r6
 8000b16:	f7ff ffbd 	bl	8000a94 <__sinit>
 8000b1a:	3648      	adds	r6, #72	; 0x48
 8000b1c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b20:	3b01      	subs	r3, #1
 8000b22:	d503      	bpl.n	8000b2c <__sfp+0x28>
 8000b24:	6833      	ldr	r3, [r6, #0]
 8000b26:	b30b      	cbz	r3, 8000b6c <__sfp+0x68>
 8000b28:	6836      	ldr	r6, [r6, #0]
 8000b2a:	e7f7      	b.n	8000b1c <__sfp+0x18>
 8000b2c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b30:	b9d5      	cbnz	r5, 8000b68 <__sfp+0x64>
 8000b32:	4b16      	ldr	r3, [pc, #88]	; (8000b8c <__sfp+0x88>)
 8000b34:	60e3      	str	r3, [r4, #12]
 8000b36:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b3a:	6665      	str	r5, [r4, #100]	; 0x64
 8000b3c:	f000 f847 	bl	8000bce <__retarget_lock_init_recursive>
 8000b40:	f7ff ff96 	bl	8000a70 <__sfp_lock_release>
 8000b44:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000b48:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000b4c:	6025      	str	r5, [r4, #0]
 8000b4e:	61a5      	str	r5, [r4, #24]
 8000b50:	2208      	movs	r2, #8
 8000b52:	4629      	mov	r1, r5
 8000b54:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b58:	f7ff fd48 	bl	80005ec <memset>
 8000b5c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b60:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b64:	4620      	mov	r0, r4
 8000b66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b68:	3468      	adds	r4, #104	; 0x68
 8000b6a:	e7d9      	b.n	8000b20 <__sfp+0x1c>
 8000b6c:	2104      	movs	r1, #4
 8000b6e:	4638      	mov	r0, r7
 8000b70:	f7ff ff62 	bl	8000a38 <__sfmoreglue>
 8000b74:	4604      	mov	r4, r0
 8000b76:	6030      	str	r0, [r6, #0]
 8000b78:	2800      	cmp	r0, #0
 8000b7a:	d1d5      	bne.n	8000b28 <__sfp+0x24>
 8000b7c:	f7ff ff78 	bl	8000a70 <__sfp_lock_release>
 8000b80:	230c      	movs	r3, #12
 8000b82:	603b      	str	r3, [r7, #0]
 8000b84:	e7ee      	b.n	8000b64 <__sfp+0x60>
 8000b86:	bf00      	nop
 8000b88:	0800157c 	.word	0x0800157c
 8000b8c:	ffff0001 	.word	0xffff0001

08000b90 <_fwalk_reent>:
 8000b90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b94:	4606      	mov	r6, r0
 8000b96:	4688      	mov	r8, r1
 8000b98:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b9c:	2700      	movs	r7, #0
 8000b9e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000ba2:	f1b9 0901 	subs.w	r9, r9, #1
 8000ba6:	d505      	bpl.n	8000bb4 <_fwalk_reent+0x24>
 8000ba8:	6824      	ldr	r4, [r4, #0]
 8000baa:	2c00      	cmp	r4, #0
 8000bac:	d1f7      	bne.n	8000b9e <_fwalk_reent+0xe>
 8000bae:	4638      	mov	r0, r7
 8000bb0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bb4:	89ab      	ldrh	r3, [r5, #12]
 8000bb6:	2b01      	cmp	r3, #1
 8000bb8:	d907      	bls.n	8000bca <_fwalk_reent+0x3a>
 8000bba:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000bbe:	3301      	adds	r3, #1
 8000bc0:	d003      	beq.n	8000bca <_fwalk_reent+0x3a>
 8000bc2:	4629      	mov	r1, r5
 8000bc4:	4630      	mov	r0, r6
 8000bc6:	47c0      	blx	r8
 8000bc8:	4307      	orrs	r7, r0
 8000bca:	3568      	adds	r5, #104	; 0x68
 8000bcc:	e7e9      	b.n	8000ba2 <_fwalk_reent+0x12>

08000bce <__retarget_lock_init_recursive>:
 8000bce:	4770      	bx	lr

08000bd0 <__retarget_lock_acquire_recursive>:
 8000bd0:	4770      	bx	lr

08000bd2 <__retarget_lock_release_recursive>:
 8000bd2:	4770      	bx	lr

08000bd4 <__swhatbuf_r>:
 8000bd4:	b570      	push	{r4, r5, r6, lr}
 8000bd6:	460e      	mov	r6, r1
 8000bd8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bdc:	2900      	cmp	r1, #0
 8000bde:	b096      	sub	sp, #88	; 0x58
 8000be0:	4614      	mov	r4, r2
 8000be2:	461d      	mov	r5, r3
 8000be4:	da08      	bge.n	8000bf8 <__swhatbuf_r+0x24>
 8000be6:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000bea:	2200      	movs	r2, #0
 8000bec:	602a      	str	r2, [r5, #0]
 8000bee:	061a      	lsls	r2, r3, #24
 8000bf0:	d410      	bmi.n	8000c14 <__swhatbuf_r+0x40>
 8000bf2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000bf6:	e00e      	b.n	8000c16 <__swhatbuf_r+0x42>
 8000bf8:	466a      	mov	r2, sp
 8000bfa:	f000 f9a5 	bl	8000f48 <_fstat_r>
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	dbf1      	blt.n	8000be6 <__swhatbuf_r+0x12>
 8000c02:	9a01      	ldr	r2, [sp, #4]
 8000c04:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000c08:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000c0c:	425a      	negs	r2, r3
 8000c0e:	415a      	adcs	r2, r3
 8000c10:	602a      	str	r2, [r5, #0]
 8000c12:	e7ee      	b.n	8000bf2 <__swhatbuf_r+0x1e>
 8000c14:	2340      	movs	r3, #64	; 0x40
 8000c16:	2000      	movs	r0, #0
 8000c18:	6023      	str	r3, [r4, #0]
 8000c1a:	b016      	add	sp, #88	; 0x58
 8000c1c:	bd70      	pop	{r4, r5, r6, pc}
	...

08000c20 <__smakebuf_r>:
 8000c20:	898b      	ldrh	r3, [r1, #12]
 8000c22:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c24:	079d      	lsls	r5, r3, #30
 8000c26:	4606      	mov	r6, r0
 8000c28:	460c      	mov	r4, r1
 8000c2a:	d507      	bpl.n	8000c3c <__smakebuf_r+0x1c>
 8000c2c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c30:	6023      	str	r3, [r4, #0]
 8000c32:	6123      	str	r3, [r4, #16]
 8000c34:	2301      	movs	r3, #1
 8000c36:	6163      	str	r3, [r4, #20]
 8000c38:	b002      	add	sp, #8
 8000c3a:	bd70      	pop	{r4, r5, r6, pc}
 8000c3c:	ab01      	add	r3, sp, #4
 8000c3e:	466a      	mov	r2, sp
 8000c40:	f7ff ffc8 	bl	8000bd4 <__swhatbuf_r>
 8000c44:	9900      	ldr	r1, [sp, #0]
 8000c46:	4605      	mov	r5, r0
 8000c48:	4630      	mov	r0, r6
 8000c4a:	f000 f893 	bl	8000d74 <_malloc_r>
 8000c4e:	b948      	cbnz	r0, 8000c64 <__smakebuf_r+0x44>
 8000c50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c54:	059a      	lsls	r2, r3, #22
 8000c56:	d4ef      	bmi.n	8000c38 <__smakebuf_r+0x18>
 8000c58:	f023 0303 	bic.w	r3, r3, #3
 8000c5c:	f043 0302 	orr.w	r3, r3, #2
 8000c60:	81a3      	strh	r3, [r4, #12]
 8000c62:	e7e3      	b.n	8000c2c <__smakebuf_r+0xc>
 8000c64:	4b0d      	ldr	r3, [pc, #52]	; (8000c9c <__smakebuf_r+0x7c>)
 8000c66:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c68:	89a3      	ldrh	r3, [r4, #12]
 8000c6a:	6020      	str	r0, [r4, #0]
 8000c6c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c70:	81a3      	strh	r3, [r4, #12]
 8000c72:	9b00      	ldr	r3, [sp, #0]
 8000c74:	6163      	str	r3, [r4, #20]
 8000c76:	9b01      	ldr	r3, [sp, #4]
 8000c78:	6120      	str	r0, [r4, #16]
 8000c7a:	b15b      	cbz	r3, 8000c94 <__smakebuf_r+0x74>
 8000c7c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c80:	4630      	mov	r0, r6
 8000c82:	f000 f973 	bl	8000f6c <_isatty_r>
 8000c86:	b128      	cbz	r0, 8000c94 <__smakebuf_r+0x74>
 8000c88:	89a3      	ldrh	r3, [r4, #12]
 8000c8a:	f023 0303 	bic.w	r3, r3, #3
 8000c8e:	f043 0301 	orr.w	r3, r3, #1
 8000c92:	81a3      	strh	r3, [r4, #12]
 8000c94:	89a0      	ldrh	r0, [r4, #12]
 8000c96:	4305      	orrs	r5, r0
 8000c98:	81a5      	strh	r5, [r4, #12]
 8000c9a:	e7cd      	b.n	8000c38 <__smakebuf_r+0x18>
 8000c9c:	08000a2d 	.word	0x08000a2d

08000ca0 <_free_r>:
 8000ca0:	b538      	push	{r3, r4, r5, lr}
 8000ca2:	4605      	mov	r5, r0
 8000ca4:	2900      	cmp	r1, #0
 8000ca6:	d041      	beq.n	8000d2c <_free_r+0x8c>
 8000ca8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000cac:	1f0c      	subs	r4, r1, #4
 8000cae:	2b00      	cmp	r3, #0
 8000cb0:	bfb8      	it	lt
 8000cb2:	18e4      	addlt	r4, r4, r3
 8000cb4:	f000 f97c 	bl	8000fb0 <__malloc_lock>
 8000cb8:	4a1d      	ldr	r2, [pc, #116]	; (8000d30 <_free_r+0x90>)
 8000cba:	6813      	ldr	r3, [r2, #0]
 8000cbc:	b933      	cbnz	r3, 8000ccc <_free_r+0x2c>
 8000cbe:	6063      	str	r3, [r4, #4]
 8000cc0:	6014      	str	r4, [r2, #0]
 8000cc2:	4628      	mov	r0, r5
 8000cc4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cc8:	f000 b978 	b.w	8000fbc <__malloc_unlock>
 8000ccc:	42a3      	cmp	r3, r4
 8000cce:	d908      	bls.n	8000ce2 <_free_r+0x42>
 8000cd0:	6820      	ldr	r0, [r4, #0]
 8000cd2:	1821      	adds	r1, r4, r0
 8000cd4:	428b      	cmp	r3, r1
 8000cd6:	bf01      	itttt	eq
 8000cd8:	6819      	ldreq	r1, [r3, #0]
 8000cda:	685b      	ldreq	r3, [r3, #4]
 8000cdc:	1809      	addeq	r1, r1, r0
 8000cde:	6021      	streq	r1, [r4, #0]
 8000ce0:	e7ed      	b.n	8000cbe <_free_r+0x1e>
 8000ce2:	461a      	mov	r2, r3
 8000ce4:	685b      	ldr	r3, [r3, #4]
 8000ce6:	b10b      	cbz	r3, 8000cec <_free_r+0x4c>
 8000ce8:	42a3      	cmp	r3, r4
 8000cea:	d9fa      	bls.n	8000ce2 <_free_r+0x42>
 8000cec:	6811      	ldr	r1, [r2, #0]
 8000cee:	1850      	adds	r0, r2, r1
 8000cf0:	42a0      	cmp	r0, r4
 8000cf2:	d10b      	bne.n	8000d0c <_free_r+0x6c>
 8000cf4:	6820      	ldr	r0, [r4, #0]
 8000cf6:	4401      	add	r1, r0
 8000cf8:	1850      	adds	r0, r2, r1
 8000cfa:	4283      	cmp	r3, r0
 8000cfc:	6011      	str	r1, [r2, #0]
 8000cfe:	d1e0      	bne.n	8000cc2 <_free_r+0x22>
 8000d00:	6818      	ldr	r0, [r3, #0]
 8000d02:	685b      	ldr	r3, [r3, #4]
 8000d04:	6053      	str	r3, [r2, #4]
 8000d06:	4401      	add	r1, r0
 8000d08:	6011      	str	r1, [r2, #0]
 8000d0a:	e7da      	b.n	8000cc2 <_free_r+0x22>
 8000d0c:	d902      	bls.n	8000d14 <_free_r+0x74>
 8000d0e:	230c      	movs	r3, #12
 8000d10:	602b      	str	r3, [r5, #0]
 8000d12:	e7d6      	b.n	8000cc2 <_free_r+0x22>
 8000d14:	6820      	ldr	r0, [r4, #0]
 8000d16:	1821      	adds	r1, r4, r0
 8000d18:	428b      	cmp	r3, r1
 8000d1a:	bf04      	itt	eq
 8000d1c:	6819      	ldreq	r1, [r3, #0]
 8000d1e:	685b      	ldreq	r3, [r3, #4]
 8000d20:	6063      	str	r3, [r4, #4]
 8000d22:	bf04      	itt	eq
 8000d24:	1809      	addeq	r1, r1, r0
 8000d26:	6021      	streq	r1, [r4, #0]
 8000d28:	6054      	str	r4, [r2, #4]
 8000d2a:	e7ca      	b.n	8000cc2 <_free_r+0x22>
 8000d2c:	bd38      	pop	{r3, r4, r5, pc}
 8000d2e:	bf00      	nop
 8000d30:	200000ac 	.word	0x200000ac

08000d34 <sbrk_aligned>:
 8000d34:	b570      	push	{r4, r5, r6, lr}
 8000d36:	4e0e      	ldr	r6, [pc, #56]	; (8000d70 <sbrk_aligned+0x3c>)
 8000d38:	460c      	mov	r4, r1
 8000d3a:	6831      	ldr	r1, [r6, #0]
 8000d3c:	4605      	mov	r5, r0
 8000d3e:	b911      	cbnz	r1, 8000d46 <sbrk_aligned+0x12>
 8000d40:	f000 f88c 	bl	8000e5c <_sbrk_r>
 8000d44:	6030      	str	r0, [r6, #0]
 8000d46:	4621      	mov	r1, r4
 8000d48:	4628      	mov	r0, r5
 8000d4a:	f000 f887 	bl	8000e5c <_sbrk_r>
 8000d4e:	1c43      	adds	r3, r0, #1
 8000d50:	d00a      	beq.n	8000d68 <sbrk_aligned+0x34>
 8000d52:	1cc4      	adds	r4, r0, #3
 8000d54:	f024 0403 	bic.w	r4, r4, #3
 8000d58:	42a0      	cmp	r0, r4
 8000d5a:	d007      	beq.n	8000d6c <sbrk_aligned+0x38>
 8000d5c:	1a21      	subs	r1, r4, r0
 8000d5e:	4628      	mov	r0, r5
 8000d60:	f000 f87c 	bl	8000e5c <_sbrk_r>
 8000d64:	3001      	adds	r0, #1
 8000d66:	d101      	bne.n	8000d6c <sbrk_aligned+0x38>
 8000d68:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000d6c:	4620      	mov	r0, r4
 8000d6e:	bd70      	pop	{r4, r5, r6, pc}
 8000d70:	200000b0 	.word	0x200000b0

08000d74 <_malloc_r>:
 8000d74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d78:	1ccd      	adds	r5, r1, #3
 8000d7a:	f025 0503 	bic.w	r5, r5, #3
 8000d7e:	3508      	adds	r5, #8
 8000d80:	2d0c      	cmp	r5, #12
 8000d82:	bf38      	it	cc
 8000d84:	250c      	movcc	r5, #12
 8000d86:	2d00      	cmp	r5, #0
 8000d88:	4607      	mov	r7, r0
 8000d8a:	db01      	blt.n	8000d90 <_malloc_r+0x1c>
 8000d8c:	42a9      	cmp	r1, r5
 8000d8e:	d905      	bls.n	8000d9c <_malloc_r+0x28>
 8000d90:	230c      	movs	r3, #12
 8000d92:	603b      	str	r3, [r7, #0]
 8000d94:	2600      	movs	r6, #0
 8000d96:	4630      	mov	r0, r6
 8000d98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000d9c:	4e2e      	ldr	r6, [pc, #184]	; (8000e58 <_malloc_r+0xe4>)
 8000d9e:	f000 f907 	bl	8000fb0 <__malloc_lock>
 8000da2:	6833      	ldr	r3, [r6, #0]
 8000da4:	461c      	mov	r4, r3
 8000da6:	bb34      	cbnz	r4, 8000df6 <_malloc_r+0x82>
 8000da8:	4629      	mov	r1, r5
 8000daa:	4638      	mov	r0, r7
 8000dac:	f7ff ffc2 	bl	8000d34 <sbrk_aligned>
 8000db0:	1c43      	adds	r3, r0, #1
 8000db2:	4604      	mov	r4, r0
 8000db4:	d14d      	bne.n	8000e52 <_malloc_r+0xde>
 8000db6:	6834      	ldr	r4, [r6, #0]
 8000db8:	4626      	mov	r6, r4
 8000dba:	2e00      	cmp	r6, #0
 8000dbc:	d140      	bne.n	8000e40 <_malloc_r+0xcc>
 8000dbe:	6823      	ldr	r3, [r4, #0]
 8000dc0:	4631      	mov	r1, r6
 8000dc2:	4638      	mov	r0, r7
 8000dc4:	eb04 0803 	add.w	r8, r4, r3
 8000dc8:	f000 f848 	bl	8000e5c <_sbrk_r>
 8000dcc:	4580      	cmp	r8, r0
 8000dce:	d13a      	bne.n	8000e46 <_malloc_r+0xd2>
 8000dd0:	6821      	ldr	r1, [r4, #0]
 8000dd2:	3503      	adds	r5, #3
 8000dd4:	1a6d      	subs	r5, r5, r1
 8000dd6:	f025 0503 	bic.w	r5, r5, #3
 8000dda:	3508      	adds	r5, #8
 8000ddc:	2d0c      	cmp	r5, #12
 8000dde:	bf38      	it	cc
 8000de0:	250c      	movcc	r5, #12
 8000de2:	4629      	mov	r1, r5
 8000de4:	4638      	mov	r0, r7
 8000de6:	f7ff ffa5 	bl	8000d34 <sbrk_aligned>
 8000dea:	3001      	adds	r0, #1
 8000dec:	d02b      	beq.n	8000e46 <_malloc_r+0xd2>
 8000dee:	6823      	ldr	r3, [r4, #0]
 8000df0:	442b      	add	r3, r5
 8000df2:	6023      	str	r3, [r4, #0]
 8000df4:	e00e      	b.n	8000e14 <_malloc_r+0xa0>
 8000df6:	6822      	ldr	r2, [r4, #0]
 8000df8:	1b52      	subs	r2, r2, r5
 8000dfa:	d41e      	bmi.n	8000e3a <_malloc_r+0xc6>
 8000dfc:	2a0b      	cmp	r2, #11
 8000dfe:	d916      	bls.n	8000e2e <_malloc_r+0xba>
 8000e00:	1961      	adds	r1, r4, r5
 8000e02:	42a3      	cmp	r3, r4
 8000e04:	6025      	str	r5, [r4, #0]
 8000e06:	bf18      	it	ne
 8000e08:	6059      	strne	r1, [r3, #4]
 8000e0a:	6863      	ldr	r3, [r4, #4]
 8000e0c:	bf08      	it	eq
 8000e0e:	6031      	streq	r1, [r6, #0]
 8000e10:	5162      	str	r2, [r4, r5]
 8000e12:	604b      	str	r3, [r1, #4]
 8000e14:	4638      	mov	r0, r7
 8000e16:	f104 060b 	add.w	r6, r4, #11
 8000e1a:	f000 f8cf 	bl	8000fbc <__malloc_unlock>
 8000e1e:	f026 0607 	bic.w	r6, r6, #7
 8000e22:	1d23      	adds	r3, r4, #4
 8000e24:	1af2      	subs	r2, r6, r3
 8000e26:	d0b6      	beq.n	8000d96 <_malloc_r+0x22>
 8000e28:	1b9b      	subs	r3, r3, r6
 8000e2a:	50a3      	str	r3, [r4, r2]
 8000e2c:	e7b3      	b.n	8000d96 <_malloc_r+0x22>
 8000e2e:	6862      	ldr	r2, [r4, #4]
 8000e30:	42a3      	cmp	r3, r4
 8000e32:	bf0c      	ite	eq
 8000e34:	6032      	streq	r2, [r6, #0]
 8000e36:	605a      	strne	r2, [r3, #4]
 8000e38:	e7ec      	b.n	8000e14 <_malloc_r+0xa0>
 8000e3a:	4623      	mov	r3, r4
 8000e3c:	6864      	ldr	r4, [r4, #4]
 8000e3e:	e7b2      	b.n	8000da6 <_malloc_r+0x32>
 8000e40:	4634      	mov	r4, r6
 8000e42:	6876      	ldr	r6, [r6, #4]
 8000e44:	e7b9      	b.n	8000dba <_malloc_r+0x46>
 8000e46:	230c      	movs	r3, #12
 8000e48:	603b      	str	r3, [r7, #0]
 8000e4a:	4638      	mov	r0, r7
 8000e4c:	f000 f8b6 	bl	8000fbc <__malloc_unlock>
 8000e50:	e7a1      	b.n	8000d96 <_malloc_r+0x22>
 8000e52:	6025      	str	r5, [r4, #0]
 8000e54:	e7de      	b.n	8000e14 <_malloc_r+0xa0>
 8000e56:	bf00      	nop
 8000e58:	200000ac 	.word	0x200000ac

08000e5c <_sbrk_r>:
 8000e5c:	b538      	push	{r3, r4, r5, lr}
 8000e5e:	4d06      	ldr	r5, [pc, #24]	; (8000e78 <_sbrk_r+0x1c>)
 8000e60:	2300      	movs	r3, #0
 8000e62:	4604      	mov	r4, r0
 8000e64:	4608      	mov	r0, r1
 8000e66:	602b      	str	r3, [r5, #0]
 8000e68:	f7ff fb36 	bl	80004d8 <_sbrk>
 8000e6c:	1c43      	adds	r3, r0, #1
 8000e6e:	d102      	bne.n	8000e76 <_sbrk_r+0x1a>
 8000e70:	682b      	ldr	r3, [r5, #0]
 8000e72:	b103      	cbz	r3, 8000e76 <_sbrk_r+0x1a>
 8000e74:	6023      	str	r3, [r4, #0]
 8000e76:	bd38      	pop	{r3, r4, r5, pc}
 8000e78:	200000b4 	.word	0x200000b4

08000e7c <__sread>:
 8000e7c:	b510      	push	{r4, lr}
 8000e7e:	460c      	mov	r4, r1
 8000e80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e84:	f000 f8a0 	bl	8000fc8 <_read_r>
 8000e88:	2800      	cmp	r0, #0
 8000e8a:	bfab      	itete	ge
 8000e8c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e8e:	89a3      	ldrhlt	r3, [r4, #12]
 8000e90:	181b      	addge	r3, r3, r0
 8000e92:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e96:	bfac      	ite	ge
 8000e98:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e9a:	81a3      	strhlt	r3, [r4, #12]
 8000e9c:	bd10      	pop	{r4, pc}

08000e9e <__swrite>:
 8000e9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ea2:	461f      	mov	r7, r3
 8000ea4:	898b      	ldrh	r3, [r1, #12]
 8000ea6:	05db      	lsls	r3, r3, #23
 8000ea8:	4605      	mov	r5, r0
 8000eaa:	460c      	mov	r4, r1
 8000eac:	4616      	mov	r6, r2
 8000eae:	d505      	bpl.n	8000ebc <__swrite+0x1e>
 8000eb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eb4:	2302      	movs	r3, #2
 8000eb6:	2200      	movs	r2, #0
 8000eb8:	f000 f868 	bl	8000f8c <_lseek_r>
 8000ebc:	89a3      	ldrh	r3, [r4, #12]
 8000ebe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ec2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000ec6:	81a3      	strh	r3, [r4, #12]
 8000ec8:	4632      	mov	r2, r6
 8000eca:	463b      	mov	r3, r7
 8000ecc:	4628      	mov	r0, r5
 8000ece:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ed2:	f000 b817 	b.w	8000f04 <_write_r>

08000ed6 <__sseek>:
 8000ed6:	b510      	push	{r4, lr}
 8000ed8:	460c      	mov	r4, r1
 8000eda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ede:	f000 f855 	bl	8000f8c <_lseek_r>
 8000ee2:	1c43      	adds	r3, r0, #1
 8000ee4:	89a3      	ldrh	r3, [r4, #12]
 8000ee6:	bf15      	itete	ne
 8000ee8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000eea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000eee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000ef2:	81a3      	strheq	r3, [r4, #12]
 8000ef4:	bf18      	it	ne
 8000ef6:	81a3      	strhne	r3, [r4, #12]
 8000ef8:	bd10      	pop	{r4, pc}

08000efa <__sclose>:
 8000efa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000efe:	f000 b813 	b.w	8000f28 <_close_r>
	...

08000f04 <_write_r>:
 8000f04:	b538      	push	{r3, r4, r5, lr}
 8000f06:	4d07      	ldr	r5, [pc, #28]	; (8000f24 <_write_r+0x20>)
 8000f08:	4604      	mov	r4, r0
 8000f0a:	4608      	mov	r0, r1
 8000f0c:	4611      	mov	r1, r2
 8000f0e:	2200      	movs	r2, #0
 8000f10:	602a      	str	r2, [r5, #0]
 8000f12:	461a      	mov	r2, r3
 8000f14:	f000 f90f 	bl	8001136 <_write>
 8000f18:	1c43      	adds	r3, r0, #1
 8000f1a:	d102      	bne.n	8000f22 <_write_r+0x1e>
 8000f1c:	682b      	ldr	r3, [r5, #0]
 8000f1e:	b103      	cbz	r3, 8000f22 <_write_r+0x1e>
 8000f20:	6023      	str	r3, [r4, #0]
 8000f22:	bd38      	pop	{r3, r4, r5, pc}
 8000f24:	200000b4 	.word	0x200000b4

08000f28 <_close_r>:
 8000f28:	b538      	push	{r3, r4, r5, lr}
 8000f2a:	4d06      	ldr	r5, [pc, #24]	; (8000f44 <_close_r+0x1c>)
 8000f2c:	2300      	movs	r3, #0
 8000f2e:	4604      	mov	r4, r0
 8000f30:	4608      	mov	r0, r1
 8000f32:	602b      	str	r3, [r5, #0]
 8000f34:	f000 f92c 	bl	8001190 <_close>
 8000f38:	1c43      	adds	r3, r0, #1
 8000f3a:	d102      	bne.n	8000f42 <_close_r+0x1a>
 8000f3c:	682b      	ldr	r3, [r5, #0]
 8000f3e:	b103      	cbz	r3, 8000f42 <_close_r+0x1a>
 8000f40:	6023      	str	r3, [r4, #0]
 8000f42:	bd38      	pop	{r3, r4, r5, pc}
 8000f44:	200000b4 	.word	0x200000b4

08000f48 <_fstat_r>:
 8000f48:	b538      	push	{r3, r4, r5, lr}
 8000f4a:	4d07      	ldr	r5, [pc, #28]	; (8000f68 <_fstat_r+0x20>)
 8000f4c:	2300      	movs	r3, #0
 8000f4e:	4604      	mov	r4, r0
 8000f50:	4608      	mov	r0, r1
 8000f52:	4611      	mov	r1, r2
 8000f54:	602b      	str	r3, [r5, #0]
 8000f56:	f000 f962 	bl	800121e <_fstat>
 8000f5a:	1c43      	adds	r3, r0, #1
 8000f5c:	d102      	bne.n	8000f64 <_fstat_r+0x1c>
 8000f5e:	682b      	ldr	r3, [r5, #0]
 8000f60:	b103      	cbz	r3, 8000f64 <_fstat_r+0x1c>
 8000f62:	6023      	str	r3, [r4, #0]
 8000f64:	bd38      	pop	{r3, r4, r5, pc}
 8000f66:	bf00      	nop
 8000f68:	200000b4 	.word	0x200000b4

08000f6c <_isatty_r>:
 8000f6c:	b538      	push	{r3, r4, r5, lr}
 8000f6e:	4d06      	ldr	r5, [pc, #24]	; (8000f88 <_isatty_r+0x1c>)
 8000f70:	2300      	movs	r3, #0
 8000f72:	4604      	mov	r4, r0
 8000f74:	4608      	mov	r0, r1
 8000f76:	602b      	str	r3, [r5, #0]
 8000f78:	f000 fab8 	bl	80014ec <_isatty>
 8000f7c:	1c43      	adds	r3, r0, #1
 8000f7e:	d102      	bne.n	8000f86 <_isatty_r+0x1a>
 8000f80:	682b      	ldr	r3, [r5, #0]
 8000f82:	b103      	cbz	r3, 8000f86 <_isatty_r+0x1a>
 8000f84:	6023      	str	r3, [r4, #0]
 8000f86:	bd38      	pop	{r3, r4, r5, pc}
 8000f88:	200000b4 	.word	0x200000b4

08000f8c <_lseek_r>:
 8000f8c:	b538      	push	{r3, r4, r5, lr}
 8000f8e:	4d07      	ldr	r5, [pc, #28]	; (8000fac <_lseek_r+0x20>)
 8000f90:	4604      	mov	r4, r0
 8000f92:	4608      	mov	r0, r1
 8000f94:	4611      	mov	r1, r2
 8000f96:	2200      	movs	r2, #0
 8000f98:	602a      	str	r2, [r5, #0]
 8000f9a:	461a      	mov	r2, r3
 8000f9c:	f000 f8b9 	bl	8001112 <_lseek>
 8000fa0:	1c43      	adds	r3, r0, #1
 8000fa2:	d102      	bne.n	8000faa <_lseek_r+0x1e>
 8000fa4:	682b      	ldr	r3, [r5, #0]
 8000fa6:	b103      	cbz	r3, 8000faa <_lseek_r+0x1e>
 8000fa8:	6023      	str	r3, [r4, #0]
 8000faa:	bd38      	pop	{r3, r4, r5, pc}
 8000fac:	200000b4 	.word	0x200000b4

08000fb0 <__malloc_lock>:
 8000fb0:	4801      	ldr	r0, [pc, #4]	; (8000fb8 <__malloc_lock+0x8>)
 8000fb2:	f7ff be0d 	b.w	8000bd0 <__retarget_lock_acquire_recursive>
 8000fb6:	bf00      	nop
 8000fb8:	200000a8 	.word	0x200000a8

08000fbc <__malloc_unlock>:
 8000fbc:	4801      	ldr	r0, [pc, #4]	; (8000fc4 <__malloc_unlock+0x8>)
 8000fbe:	f7ff be08 	b.w	8000bd2 <__retarget_lock_release_recursive>
 8000fc2:	bf00      	nop
 8000fc4:	200000a8 	.word	0x200000a8

08000fc8 <_read_r>:
 8000fc8:	b538      	push	{r3, r4, r5, lr}
 8000fca:	4d07      	ldr	r5, [pc, #28]	; (8000fe8 <_read_r+0x20>)
 8000fcc:	4604      	mov	r4, r0
 8000fce:	4608      	mov	r0, r1
 8000fd0:	4611      	mov	r1, r2
 8000fd2:	2200      	movs	r2, #0
 8000fd4:	602a      	str	r2, [r5, #0]
 8000fd6:	461a      	mov	r2, r3
 8000fd8:	f000 f845 	bl	8001066 <_read>
 8000fdc:	1c43      	adds	r3, r0, #1
 8000fde:	d102      	bne.n	8000fe6 <_read_r+0x1e>
 8000fe0:	682b      	ldr	r3, [r5, #0]
 8000fe2:	b103      	cbz	r3, 8000fe6 <_read_r+0x1e>
 8000fe4:	6023      	str	r3, [r4, #0]
 8000fe6:	bd38      	pop	{r3, r4, r5, pc}
 8000fe8:	200000b4 	.word	0x200000b4

08000fec <findslot>:
 8000fec:	4b0a      	ldr	r3, [pc, #40]	; (8001018 <findslot+0x2c>)
 8000fee:	b510      	push	{r4, lr}
 8000ff0:	4604      	mov	r4, r0
 8000ff2:	6818      	ldr	r0, [r3, #0]
 8000ff4:	b118      	cbz	r0, 8000ffe <findslot+0x12>
 8000ff6:	6983      	ldr	r3, [r0, #24]
 8000ff8:	b90b      	cbnz	r3, 8000ffe <findslot+0x12>
 8000ffa:	f7ff fd4b 	bl	8000a94 <__sinit>
 8000ffe:	2c13      	cmp	r4, #19
 8001000:	d807      	bhi.n	8001012 <findslot+0x26>
 8001002:	4806      	ldr	r0, [pc, #24]	; (800101c <findslot+0x30>)
 8001004:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8001008:	3201      	adds	r2, #1
 800100a:	d002      	beq.n	8001012 <findslot+0x26>
 800100c:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8001010:	bd10      	pop	{r4, pc}
 8001012:	2000      	movs	r0, #0
 8001014:	e7fc      	b.n	8001010 <findslot+0x24>
 8001016:	bf00      	nop
 8001018:	2000001c 	.word	0x2000001c
 800101c:	200000c4 	.word	0x200000c4

08001020 <error>:
 8001020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001022:	4604      	mov	r4, r0
 8001024:	f7ff fab8 	bl	8000598 <__errno>
 8001028:	2613      	movs	r6, #19
 800102a:	4605      	mov	r5, r0
 800102c:	2700      	movs	r7, #0
 800102e:	4630      	mov	r0, r6
 8001030:	4639      	mov	r1, r7
 8001032:	beab      	bkpt	0x00ab
 8001034:	4606      	mov	r6, r0
 8001036:	602e      	str	r6, [r5, #0]
 8001038:	4620      	mov	r0, r4
 800103a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800103c <checkerror>:
 800103c:	1c43      	adds	r3, r0, #1
 800103e:	d101      	bne.n	8001044 <checkerror+0x8>
 8001040:	f7ff bfee 	b.w	8001020 <error>
 8001044:	4770      	bx	lr

08001046 <_swiread>:
 8001046:	b530      	push	{r4, r5, lr}
 8001048:	b085      	sub	sp, #20
 800104a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800104e:	9203      	str	r2, [sp, #12]
 8001050:	2406      	movs	r4, #6
 8001052:	ad01      	add	r5, sp, #4
 8001054:	4620      	mov	r0, r4
 8001056:	4629      	mov	r1, r5
 8001058:	beab      	bkpt	0x00ab
 800105a:	4604      	mov	r4, r0
 800105c:	4620      	mov	r0, r4
 800105e:	f7ff ffed 	bl	800103c <checkerror>
 8001062:	b005      	add	sp, #20
 8001064:	bd30      	pop	{r4, r5, pc}

08001066 <_read>:
 8001066:	b570      	push	{r4, r5, r6, lr}
 8001068:	460e      	mov	r6, r1
 800106a:	4615      	mov	r5, r2
 800106c:	f7ff ffbe 	bl	8000fec <findslot>
 8001070:	4604      	mov	r4, r0
 8001072:	b930      	cbnz	r0, 8001082 <_read+0x1c>
 8001074:	f7ff fa90 	bl	8000598 <__errno>
 8001078:	2309      	movs	r3, #9
 800107a:	6003      	str	r3, [r0, #0]
 800107c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001080:	bd70      	pop	{r4, r5, r6, pc}
 8001082:	6800      	ldr	r0, [r0, #0]
 8001084:	462a      	mov	r2, r5
 8001086:	4631      	mov	r1, r6
 8001088:	f7ff ffdd 	bl	8001046 <_swiread>
 800108c:	1c43      	adds	r3, r0, #1
 800108e:	bf1f      	itttt	ne
 8001090:	6863      	ldrne	r3, [r4, #4]
 8001092:	1a28      	subne	r0, r5, r0
 8001094:	181b      	addne	r3, r3, r0
 8001096:	6063      	strne	r3, [r4, #4]
 8001098:	e7f2      	b.n	8001080 <_read+0x1a>

0800109a <_swilseek>:
 800109a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800109c:	460c      	mov	r4, r1
 800109e:	4616      	mov	r6, r2
 80010a0:	f7ff ffa4 	bl	8000fec <findslot>
 80010a4:	4605      	mov	r5, r0
 80010a6:	b940      	cbnz	r0, 80010ba <_swilseek+0x20>
 80010a8:	f7ff fa76 	bl	8000598 <__errno>
 80010ac:	2309      	movs	r3, #9
 80010ae:	6003      	str	r3, [r0, #0]
 80010b0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80010b4:	4620      	mov	r0, r4
 80010b6:	b003      	add	sp, #12
 80010b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010ba:	2e02      	cmp	r6, #2
 80010bc:	d903      	bls.n	80010c6 <_swilseek+0x2c>
 80010be:	f7ff fa6b 	bl	8000598 <__errno>
 80010c2:	2316      	movs	r3, #22
 80010c4:	e7f3      	b.n	80010ae <_swilseek+0x14>
 80010c6:	2e01      	cmp	r6, #1
 80010c8:	d112      	bne.n	80010f0 <_swilseek+0x56>
 80010ca:	6843      	ldr	r3, [r0, #4]
 80010cc:	18e4      	adds	r4, r4, r3
 80010ce:	d4f6      	bmi.n	80010be <_swilseek+0x24>
 80010d0:	682b      	ldr	r3, [r5, #0]
 80010d2:	260a      	movs	r6, #10
 80010d4:	e9cd 3400 	strd	r3, r4, [sp]
 80010d8:	466f      	mov	r7, sp
 80010da:	4630      	mov	r0, r6
 80010dc:	4639      	mov	r1, r7
 80010de:	beab      	bkpt	0x00ab
 80010e0:	4606      	mov	r6, r0
 80010e2:	4630      	mov	r0, r6
 80010e4:	f7ff ffaa 	bl	800103c <checkerror>
 80010e8:	2800      	cmp	r0, #0
 80010ea:	dbe1      	blt.n	80010b0 <_swilseek+0x16>
 80010ec:	606c      	str	r4, [r5, #4]
 80010ee:	e7e1      	b.n	80010b4 <_swilseek+0x1a>
 80010f0:	2e02      	cmp	r6, #2
 80010f2:	d1ed      	bne.n	80010d0 <_swilseek+0x36>
 80010f4:	6803      	ldr	r3, [r0, #0]
 80010f6:	9300      	str	r3, [sp, #0]
 80010f8:	260c      	movs	r6, #12
 80010fa:	466f      	mov	r7, sp
 80010fc:	4630      	mov	r0, r6
 80010fe:	4639      	mov	r1, r7
 8001100:	beab      	bkpt	0x00ab
 8001102:	4606      	mov	r6, r0
 8001104:	4630      	mov	r0, r6
 8001106:	f7ff ff99 	bl	800103c <checkerror>
 800110a:	1c43      	adds	r3, r0, #1
 800110c:	d0d0      	beq.n	80010b0 <_swilseek+0x16>
 800110e:	4404      	add	r4, r0
 8001110:	e7de      	b.n	80010d0 <_swilseek+0x36>

08001112 <_lseek>:
 8001112:	f7ff bfc2 	b.w	800109a <_swilseek>

08001116 <_swiwrite>:
 8001116:	b530      	push	{r4, r5, lr}
 8001118:	b085      	sub	sp, #20
 800111a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800111e:	9203      	str	r2, [sp, #12]
 8001120:	2405      	movs	r4, #5
 8001122:	ad01      	add	r5, sp, #4
 8001124:	4620      	mov	r0, r4
 8001126:	4629      	mov	r1, r5
 8001128:	beab      	bkpt	0x00ab
 800112a:	4604      	mov	r4, r0
 800112c:	4620      	mov	r0, r4
 800112e:	f7ff ff85 	bl	800103c <checkerror>
 8001132:	b005      	add	sp, #20
 8001134:	bd30      	pop	{r4, r5, pc}

08001136 <_write>:
 8001136:	b570      	push	{r4, r5, r6, lr}
 8001138:	460e      	mov	r6, r1
 800113a:	4615      	mov	r5, r2
 800113c:	f7ff ff56 	bl	8000fec <findslot>
 8001140:	4604      	mov	r4, r0
 8001142:	b930      	cbnz	r0, 8001152 <_write+0x1c>
 8001144:	f7ff fa28 	bl	8000598 <__errno>
 8001148:	2309      	movs	r3, #9
 800114a:	6003      	str	r3, [r0, #0]
 800114c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001150:	bd70      	pop	{r4, r5, r6, pc}
 8001152:	6800      	ldr	r0, [r0, #0]
 8001154:	462a      	mov	r2, r5
 8001156:	4631      	mov	r1, r6
 8001158:	f7ff ffdd 	bl	8001116 <_swiwrite>
 800115c:	1e03      	subs	r3, r0, #0
 800115e:	dbf5      	blt.n	800114c <_write+0x16>
 8001160:	6862      	ldr	r2, [r4, #4]
 8001162:	1ae8      	subs	r0, r5, r3
 8001164:	4402      	add	r2, r0
 8001166:	42ab      	cmp	r3, r5
 8001168:	6062      	str	r2, [r4, #4]
 800116a:	d1f1      	bne.n	8001150 <_write+0x1a>
 800116c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001170:	2000      	movs	r0, #0
 8001172:	f7ff bf55 	b.w	8001020 <error>

08001176 <_swiclose>:
 8001176:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001178:	2402      	movs	r4, #2
 800117a:	9001      	str	r0, [sp, #4]
 800117c:	ad01      	add	r5, sp, #4
 800117e:	4620      	mov	r0, r4
 8001180:	4629      	mov	r1, r5
 8001182:	beab      	bkpt	0x00ab
 8001184:	4604      	mov	r4, r0
 8001186:	4620      	mov	r0, r4
 8001188:	f7ff ff58 	bl	800103c <checkerror>
 800118c:	b003      	add	sp, #12
 800118e:	bd30      	pop	{r4, r5, pc}

08001190 <_close>:
 8001190:	b538      	push	{r3, r4, r5, lr}
 8001192:	4605      	mov	r5, r0
 8001194:	f7ff ff2a 	bl	8000fec <findslot>
 8001198:	4604      	mov	r4, r0
 800119a:	b930      	cbnz	r0, 80011aa <_close+0x1a>
 800119c:	f7ff f9fc 	bl	8000598 <__errno>
 80011a0:	2309      	movs	r3, #9
 80011a2:	6003      	str	r3, [r0, #0]
 80011a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011a8:	bd38      	pop	{r3, r4, r5, pc}
 80011aa:	3d01      	subs	r5, #1
 80011ac:	2d01      	cmp	r5, #1
 80011ae:	d809      	bhi.n	80011c4 <_close+0x34>
 80011b0:	4b09      	ldr	r3, [pc, #36]	; (80011d8 <_close+0x48>)
 80011b2:	689a      	ldr	r2, [r3, #8]
 80011b4:	691b      	ldr	r3, [r3, #16]
 80011b6:	429a      	cmp	r2, r3
 80011b8:	d104      	bne.n	80011c4 <_close+0x34>
 80011ba:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80011be:	6003      	str	r3, [r0, #0]
 80011c0:	2000      	movs	r0, #0
 80011c2:	e7f1      	b.n	80011a8 <_close+0x18>
 80011c4:	6820      	ldr	r0, [r4, #0]
 80011c6:	f7ff ffd6 	bl	8001176 <_swiclose>
 80011ca:	2800      	cmp	r0, #0
 80011cc:	d1ec      	bne.n	80011a8 <_close+0x18>
 80011ce:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80011d2:	6023      	str	r3, [r4, #0]
 80011d4:	e7e8      	b.n	80011a8 <_close+0x18>
 80011d6:	bf00      	nop
 80011d8:	200000c4 	.word	0x200000c4

080011dc <_swistat>:
 80011dc:	b570      	push	{r4, r5, r6, lr}
 80011de:	460c      	mov	r4, r1
 80011e0:	f7ff ff04 	bl	8000fec <findslot>
 80011e4:	4605      	mov	r5, r0
 80011e6:	b930      	cbnz	r0, 80011f6 <_swistat+0x1a>
 80011e8:	f7ff f9d6 	bl	8000598 <__errno>
 80011ec:	2309      	movs	r3, #9
 80011ee:	6003      	str	r3, [r0, #0]
 80011f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011f4:	bd70      	pop	{r4, r5, r6, pc}
 80011f6:	6863      	ldr	r3, [r4, #4]
 80011f8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80011fc:	6063      	str	r3, [r4, #4]
 80011fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001202:	64a3      	str	r3, [r4, #72]	; 0x48
 8001204:	260c      	movs	r6, #12
 8001206:	4630      	mov	r0, r6
 8001208:	4629      	mov	r1, r5
 800120a:	beab      	bkpt	0x00ab
 800120c:	4605      	mov	r5, r0
 800120e:	4628      	mov	r0, r5
 8001210:	f7ff ff14 	bl	800103c <checkerror>
 8001214:	1c43      	adds	r3, r0, #1
 8001216:	bf1c      	itt	ne
 8001218:	6120      	strne	r0, [r4, #16]
 800121a:	2000      	movne	r0, #0
 800121c:	e7ea      	b.n	80011f4 <_swistat+0x18>

0800121e <_fstat>:
 800121e:	460b      	mov	r3, r1
 8001220:	b510      	push	{r4, lr}
 8001222:	2100      	movs	r1, #0
 8001224:	4604      	mov	r4, r0
 8001226:	2258      	movs	r2, #88	; 0x58
 8001228:	4618      	mov	r0, r3
 800122a:	f7ff f9df 	bl	80005ec <memset>
 800122e:	4601      	mov	r1, r0
 8001230:	4620      	mov	r0, r4
 8001232:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001236:	f7ff bfd1 	b.w	80011dc <_swistat>

0800123a <_stat>:
 800123a:	b538      	push	{r3, r4, r5, lr}
 800123c:	460d      	mov	r5, r1
 800123e:	4604      	mov	r4, r0
 8001240:	2258      	movs	r2, #88	; 0x58
 8001242:	2100      	movs	r1, #0
 8001244:	4628      	mov	r0, r5
 8001246:	f7ff f9d1 	bl	80005ec <memset>
 800124a:	4620      	mov	r0, r4
 800124c:	2100      	movs	r1, #0
 800124e:	f000 f811 	bl	8001274 <_swiopen>
 8001252:	1c43      	adds	r3, r0, #1
 8001254:	4604      	mov	r4, r0
 8001256:	d00b      	beq.n	8001270 <_stat+0x36>
 8001258:	686b      	ldr	r3, [r5, #4]
 800125a:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 800125e:	606b      	str	r3, [r5, #4]
 8001260:	4629      	mov	r1, r5
 8001262:	f7ff ffbb 	bl	80011dc <_swistat>
 8001266:	4605      	mov	r5, r0
 8001268:	4620      	mov	r0, r4
 800126a:	f7ff ff91 	bl	8001190 <_close>
 800126e:	462c      	mov	r4, r5
 8001270:	4620      	mov	r0, r4
 8001272:	bd38      	pop	{r3, r4, r5, pc}

08001274 <_swiopen>:
 8001274:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001278:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 8001324 <_swiopen+0xb0>
 800127c:	b097      	sub	sp, #92	; 0x5c
 800127e:	4607      	mov	r7, r0
 8001280:	460e      	mov	r6, r1
 8001282:	2500      	movs	r5, #0
 8001284:	f858 4035 	ldr.w	r4, [r8, r5, lsl #3]
 8001288:	1c61      	adds	r1, r4, #1
 800128a:	d037      	beq.n	80012fc <_swiopen+0x88>
 800128c:	3501      	adds	r5, #1
 800128e:	2d14      	cmp	r5, #20
 8001290:	d1f8      	bne.n	8001284 <_swiopen+0x10>
 8001292:	f7ff f981 	bl	8000598 <__errno>
 8001296:	2318      	movs	r3, #24
 8001298:	6003      	str	r3, [r0, #0]
 800129a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800129e:	e03d      	b.n	800131c <_swiopen+0xa8>
 80012a0:	f3c6 4400 	ubfx	r4, r6, #16, #1
 80012a4:	f240 6301 	movw	r3, #1537	; 0x601
 80012a8:	07b2      	lsls	r2, r6, #30
 80012aa:	bf48      	it	mi
 80012ac:	f044 0402 	orrmi.w	r4, r4, #2
 80012b0:	421e      	tst	r6, r3
 80012b2:	bf18      	it	ne
 80012b4:	f044 0404 	orrne.w	r4, r4, #4
 80012b8:	0733      	lsls	r3, r6, #28
 80012ba:	bf48      	it	mi
 80012bc:	f024 0404 	bicmi.w	r4, r4, #4
 80012c0:	4638      	mov	r0, r7
 80012c2:	bf48      	it	mi
 80012c4:	f044 0408 	orrmi.w	r4, r4, #8
 80012c8:	9700      	str	r7, [sp, #0]
 80012ca:	f7fe ff9b 	bl	8000204 <strlen>
 80012ce:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80012d2:	2401      	movs	r4, #1
 80012d4:	4620      	mov	r0, r4
 80012d6:	4649      	mov	r1, r9
 80012d8:	beab      	bkpt	0x00ab
 80012da:	4604      	mov	r4, r0
 80012dc:	2c00      	cmp	r4, #0
 80012de:	db08      	blt.n	80012f2 <_swiopen+0x7e>
 80012e0:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 80012e4:	eb08 08c5 	add.w	r8, r8, r5, lsl #3
 80012e8:	2300      	movs	r3, #0
 80012ea:	f8c8 3004 	str.w	r3, [r8, #4]
 80012ee:	462c      	mov	r4, r5
 80012f0:	e014      	b.n	800131c <_swiopen+0xa8>
 80012f2:	4620      	mov	r0, r4
 80012f4:	f7ff fe94 	bl	8001020 <error>
 80012f8:	4604      	mov	r4, r0
 80012fa:	e00f      	b.n	800131c <_swiopen+0xa8>
 80012fc:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 8001300:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8001304:	46e9      	mov	r9, sp
 8001306:	d1cb      	bne.n	80012a0 <_swiopen+0x2c>
 8001308:	4649      	mov	r1, r9
 800130a:	4638      	mov	r0, r7
 800130c:	f7ff ff95 	bl	800123a <_stat>
 8001310:	3001      	adds	r0, #1
 8001312:	d0c5      	beq.n	80012a0 <_swiopen+0x2c>
 8001314:	f7ff f940 	bl	8000598 <__errno>
 8001318:	2311      	movs	r3, #17
 800131a:	6003      	str	r3, [r0, #0]
 800131c:	4620      	mov	r0, r4
 800131e:	b017      	add	sp, #92	; 0x5c
 8001320:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001324:	200000c4 	.word	0x200000c4

08001328 <_get_semihosting_exts>:
 8001328:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800132c:	4606      	mov	r6, r0
 800132e:	460f      	mov	r7, r1
 8001330:	482a      	ldr	r0, [pc, #168]	; (80013dc <_get_semihosting_exts+0xb4>)
 8001332:	2100      	movs	r1, #0
 8001334:	4615      	mov	r5, r2
 8001336:	f7ff ff9d 	bl	8001274 <_swiopen>
 800133a:	462a      	mov	r2, r5
 800133c:	4604      	mov	r4, r0
 800133e:	2100      	movs	r1, #0
 8001340:	4630      	mov	r0, r6
 8001342:	f7ff f953 	bl	80005ec <memset>
 8001346:	1c63      	adds	r3, r4, #1
 8001348:	d016      	beq.n	8001378 <_get_semihosting_exts+0x50>
 800134a:	4620      	mov	r0, r4
 800134c:	f7ff fe4e 	bl	8000fec <findslot>
 8001350:	f04f 080c 	mov.w	r8, #12
 8001354:	4681      	mov	r9, r0
 8001356:	4640      	mov	r0, r8
 8001358:	4649      	mov	r1, r9
 800135a:	beab      	bkpt	0x00ab
 800135c:	4680      	mov	r8, r0
 800135e:	4640      	mov	r0, r8
 8001360:	f7ff fe6c 	bl	800103c <checkerror>
 8001364:	2803      	cmp	r0, #3
 8001366:	dd02      	ble.n	800136e <_get_semihosting_exts+0x46>
 8001368:	1ec3      	subs	r3, r0, #3
 800136a:	42ab      	cmp	r3, r5
 800136c:	dc08      	bgt.n	8001380 <_get_semihosting_exts+0x58>
 800136e:	4620      	mov	r0, r4
 8001370:	f7ff ff0e 	bl	8001190 <_close>
 8001374:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8001378:	4620      	mov	r0, r4
 800137a:	b003      	add	sp, #12
 800137c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001380:	2204      	movs	r2, #4
 8001382:	eb0d 0102 	add.w	r1, sp, r2
 8001386:	4620      	mov	r0, r4
 8001388:	f7ff fe6d 	bl	8001066 <_read>
 800138c:	2803      	cmp	r0, #3
 800138e:	ddee      	ble.n	800136e <_get_semihosting_exts+0x46>
 8001390:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001394:	2b53      	cmp	r3, #83	; 0x53
 8001396:	d1ea      	bne.n	800136e <_get_semihosting_exts+0x46>
 8001398:	f89d 3005 	ldrb.w	r3, [sp, #5]
 800139c:	2b48      	cmp	r3, #72	; 0x48
 800139e:	d1e6      	bne.n	800136e <_get_semihosting_exts+0x46>
 80013a0:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80013a4:	2b46      	cmp	r3, #70	; 0x46
 80013a6:	d1e2      	bne.n	800136e <_get_semihosting_exts+0x46>
 80013a8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80013ac:	2b42      	cmp	r3, #66	; 0x42
 80013ae:	d1de      	bne.n	800136e <_get_semihosting_exts+0x46>
 80013b0:	2201      	movs	r2, #1
 80013b2:	4639      	mov	r1, r7
 80013b4:	4620      	mov	r0, r4
 80013b6:	f7ff fe70 	bl	800109a <_swilseek>
 80013ba:	2800      	cmp	r0, #0
 80013bc:	dbd7      	blt.n	800136e <_get_semihosting_exts+0x46>
 80013be:	462a      	mov	r2, r5
 80013c0:	4631      	mov	r1, r6
 80013c2:	4620      	mov	r0, r4
 80013c4:	f7ff fe4f 	bl	8001066 <_read>
 80013c8:	4605      	mov	r5, r0
 80013ca:	4620      	mov	r0, r4
 80013cc:	f7ff fee0 	bl	8001190 <_close>
 80013d0:	4628      	mov	r0, r5
 80013d2:	f7ff fe33 	bl	800103c <checkerror>
 80013d6:	4604      	mov	r4, r0
 80013d8:	e7ce      	b.n	8001378 <_get_semihosting_exts+0x50>
 80013da:	bf00      	nop
 80013dc:	080015e0 	.word	0x080015e0

080013e0 <initialise_semihosting_exts>:
 80013e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80013e2:	4d0a      	ldr	r5, [pc, #40]	; (800140c <initialise_semihosting_exts+0x2c>)
 80013e4:	4c0a      	ldr	r4, [pc, #40]	; (8001410 <initialise_semihosting_exts+0x30>)
 80013e6:	2100      	movs	r1, #0
 80013e8:	2201      	movs	r2, #1
 80013ea:	a801      	add	r0, sp, #4
 80013ec:	6029      	str	r1, [r5, #0]
 80013ee:	6022      	str	r2, [r4, #0]
 80013f0:	f7ff ff9a 	bl	8001328 <_get_semihosting_exts>
 80013f4:	2800      	cmp	r0, #0
 80013f6:	dd07      	ble.n	8001408 <initialise_semihosting_exts+0x28>
 80013f8:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80013fc:	f003 0201 	and.w	r2, r3, #1
 8001400:	f003 0302 	and.w	r3, r3, #2
 8001404:	602a      	str	r2, [r5, #0]
 8001406:	6023      	str	r3, [r4, #0]
 8001408:	b003      	add	sp, #12
 800140a:	bd30      	pop	{r4, r5, pc}
 800140c:	20000080 	.word	0x20000080
 8001410:	20000084 	.word	0x20000084

08001414 <_has_ext_stdout_stderr>:
 8001414:	b510      	push	{r4, lr}
 8001416:	4c04      	ldr	r4, [pc, #16]	; (8001428 <_has_ext_stdout_stderr+0x14>)
 8001418:	6823      	ldr	r3, [r4, #0]
 800141a:	2b00      	cmp	r3, #0
 800141c:	da01      	bge.n	8001422 <_has_ext_stdout_stderr+0xe>
 800141e:	f7ff ffdf 	bl	80013e0 <initialise_semihosting_exts>
 8001422:	6820      	ldr	r0, [r4, #0]
 8001424:	bd10      	pop	{r4, pc}
 8001426:	bf00      	nop
 8001428:	20000084 	.word	0x20000084

0800142c <initialise_monitor_handles>:
 800142c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001430:	b085      	sub	sp, #20
 8001432:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 80014d8 <initialise_monitor_handles+0xac>
 8001436:	f8cd 9004 	str.w	r9, [sp, #4]
 800143a:	2303      	movs	r3, #3
 800143c:	2400      	movs	r4, #0
 800143e:	9303      	str	r3, [sp, #12]
 8001440:	af01      	add	r7, sp, #4
 8001442:	9402      	str	r4, [sp, #8]
 8001444:	2501      	movs	r5, #1
 8001446:	4628      	mov	r0, r5
 8001448:	4639      	mov	r1, r7
 800144a:	beab      	bkpt	0x00ab
 800144c:	4605      	mov	r5, r0
 800144e:	f8df 808c 	ldr.w	r8, [pc, #140]	; 80014dc <initialise_monitor_handles+0xb0>
 8001452:	4623      	mov	r3, r4
 8001454:	4c22      	ldr	r4, [pc, #136]	; (80014e0 <initialise_monitor_handles+0xb4>)
 8001456:	f8c8 5000 	str.w	r5, [r8]
 800145a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800145e:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
 8001462:	3301      	adds	r3, #1
 8001464:	2b14      	cmp	r3, #20
 8001466:	d1fa      	bne.n	800145e <initialise_monitor_handles+0x32>
 8001468:	f7ff ffd4 	bl	8001414 <_has_ext_stdout_stderr>
 800146c:	4d1d      	ldr	r5, [pc, #116]	; (80014e4 <initialise_monitor_handles+0xb8>)
 800146e:	b1d0      	cbz	r0, 80014a6 <initialise_monitor_handles+0x7a>
 8001470:	f04f 0a03 	mov.w	sl, #3
 8001474:	2304      	movs	r3, #4
 8001476:	f8cd 9004 	str.w	r9, [sp, #4]
 800147a:	2601      	movs	r6, #1
 800147c:	f8cd a00c 	str.w	sl, [sp, #12]
 8001480:	9302      	str	r3, [sp, #8]
 8001482:	4630      	mov	r0, r6
 8001484:	4639      	mov	r1, r7
 8001486:	beab      	bkpt	0x00ab
 8001488:	4683      	mov	fp, r0
 800148a:	4b17      	ldr	r3, [pc, #92]	; (80014e8 <initialise_monitor_handles+0xbc>)
 800148c:	f8cd 9004 	str.w	r9, [sp, #4]
 8001490:	f8c3 b000 	str.w	fp, [r3]
 8001494:	2308      	movs	r3, #8
 8001496:	f8cd a00c 	str.w	sl, [sp, #12]
 800149a:	9302      	str	r3, [sp, #8]
 800149c:	4630      	mov	r0, r6
 800149e:	4639      	mov	r1, r7
 80014a0:	beab      	bkpt	0x00ab
 80014a2:	4606      	mov	r6, r0
 80014a4:	602e      	str	r6, [r5, #0]
 80014a6:	682b      	ldr	r3, [r5, #0]
 80014a8:	3301      	adds	r3, #1
 80014aa:	bf02      	ittt	eq
 80014ac:	4b0e      	ldreq	r3, [pc, #56]	; (80014e8 <initialise_monitor_handles+0xbc>)
 80014ae:	681b      	ldreq	r3, [r3, #0]
 80014b0:	602b      	streq	r3, [r5, #0]
 80014b2:	2600      	movs	r6, #0
 80014b4:	f8d8 3000 	ldr.w	r3, [r8]
 80014b8:	6023      	str	r3, [r4, #0]
 80014ba:	6066      	str	r6, [r4, #4]
 80014bc:	f7ff ffaa 	bl	8001414 <_has_ext_stdout_stderr>
 80014c0:	b130      	cbz	r0, 80014d0 <initialise_monitor_handles+0xa4>
 80014c2:	4b09      	ldr	r3, [pc, #36]	; (80014e8 <initialise_monitor_handles+0xbc>)
 80014c4:	681b      	ldr	r3, [r3, #0]
 80014c6:	e9c4 3602 	strd	r3, r6, [r4, #8]
 80014ca:	682b      	ldr	r3, [r5, #0]
 80014cc:	e9c4 3604 	strd	r3, r6, [r4, #16]
 80014d0:	b005      	add	sp, #20
 80014d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80014d6:	bf00      	nop
 80014d8:	080015f6 	.word	0x080015f6
 80014dc:	200000bc 	.word	0x200000bc
 80014e0:	200000c4 	.word	0x200000c4
 80014e4:	200000b8 	.word	0x200000b8
 80014e8:	200000c0 	.word	0x200000c0

080014ec <_isatty>:
 80014ec:	b570      	push	{r4, r5, r6, lr}
 80014ee:	f7ff fd7d 	bl	8000fec <findslot>
 80014f2:	2509      	movs	r5, #9
 80014f4:	4604      	mov	r4, r0
 80014f6:	b920      	cbnz	r0, 8001502 <_isatty+0x16>
 80014f8:	f7ff f84e 	bl	8000598 <__errno>
 80014fc:	6005      	str	r5, [r0, #0]
 80014fe:	4620      	mov	r0, r4
 8001500:	bd70      	pop	{r4, r5, r6, pc}
 8001502:	4628      	mov	r0, r5
 8001504:	4621      	mov	r1, r4
 8001506:	beab      	bkpt	0x00ab
 8001508:	4604      	mov	r4, r0
 800150a:	2c01      	cmp	r4, #1
 800150c:	d0f7      	beq.n	80014fe <_isatty+0x12>
 800150e:	f7ff f843 	bl	8000598 <__errno>
 8001512:	2400      	movs	r4, #0
 8001514:	4605      	mov	r5, r0
 8001516:	2613      	movs	r6, #19
 8001518:	4630      	mov	r0, r6
 800151a:	4621      	mov	r1, r4
 800151c:	beab      	bkpt	0x00ab
 800151e:	4606      	mov	r6, r0
 8001520:	602e      	str	r6, [r5, #0]
 8001522:	e7ec      	b.n	80014fe <_isatty+0x12>

08001524 <_init>:
 8001524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001526:	bf00      	nop
 8001528:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800152a:	bc08      	pop	{r3}
 800152c:	469e      	mov	lr, r3
 800152e:	4770      	bx	lr

08001530 <_fini>:
 8001530:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001532:	bf00      	nop
 8001534:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001536:	bc08      	pop	{r3}
 8001538:	469e      	mov	lr, r3
 800153a:	4770      	bx	lr
